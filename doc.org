Техническое задание на разработку аппаратно-программного комплекса
управления автоматизации парковки

* Процесс вьезда

  Этапы
  - Подьезд к стойке. То что происходит до того как машина оказалась
    на датчике у стойки.
    - Простой подьезд
    - Подьезд по рампе
    - Определение типа транспорта
      - Грузовой
      - Легковой
  - Наличие/отсутствие светофора и/или табло
    - Есть светофор, нет табло
    - ...
* Непонятно как:
  - Получить все подключенные датчики
  - Пинговать датчик
  - Определить когда датчик отвалился
* Как данные от компа будут инкапсулироваться в 485?
  Как формировать 485 пакет
* Что такое табло
* Как работает навигация
* Как и что будет передаваться от вьезда к серверу парковки?
* TODO Цель и основные задачи проводимых работ
* TODO Минимальный рабочий сценарий использования (TODO)
* Разрабатываемые компоненты

  =Контроллер= – одноплатный микрокомпьютер на базе микроконтроллера
  архитектуры ARM Cortex-M7 или ARM Cortex-А9 (допускается
  использование готовых решений одноплатных микрокомпьютеров,
  допускаются варианты микропроцессоров с аналогичными
  характеристиками, возможно рассмотрение вариантов микропроцессоров
  отечественной разработки) и плата расширения, обеспечивающая
  функционал управления оборудованием автоматической парковки.

  =Сервисная программа контроллера= – прошивка для микроконтроллера
  представляющая собой встраиваемую операционную систему на базе ядра
  Linux и развёрнутое на ней сервисное программное обеспечение.

  Функции:
  - Управление всеми вводами/выводами платы расширения
  - Настройку работы всего периферийного оборудования подключенного к
    плате расширения из браузера по IP-адресу контроллера.
  - Гибко настраивать и алгоритмы и последовательности работы
    оборудования подключенного к плате расширения - "На лету" изменять
    оборудование используемое с платой расширения путем закачки и/или
    выбора динамических библиотек и памяти оборудования.
  - Выполнять функцию абонентского устройства и взаимодействовать с
    серверами IP связи/телефонии
  - Выполнить функцию абонентского устройства для IP связи с сервером
    парковки
  - Запрашивать и обрабатывать/хранить данные с IP камер
  - Осуществлять голосовое сопровождение пользователя на всех этапах
    работы с оборудованием
  - Управлять торговым/периферийным оборудованием подключенным к плате
    расширения - Вести логгирование работы системы.
  - Иметь защиту от несанкционированного подключения и выполнять
    шифрования трафика при общении с сервером.
  - Обладать максимальным возможным объемом автономности(независимости
    от серверного ПО)разворачивается на самом контроллере, позволяет
    осуществлять настройку работы контроллера и тестирование
    периферийного оборудования через браузер по IP и порту контроллера.

  =Центральный сервер= – это персональный компьютер, на котором
  развёрнута программа управления парковкой и хранится база данных со
  всеми настройками системы и пользователей, а также история событий.

  =Серверное ПО= – это программа управления парковкой, через которую
  осуществляется настройка всех основных модулей системы и управление
  парковочной системой. Серверное ПО имеет ядро (сервер приложений?,
  бэкенд?), базу данных под управлением выбранной СУБД, модульный
  интерфейс (фронтенд) и гибкую систему лицензирования и защиты
  программных средств.

  =Клиентский интерфейс= – интерфейс модуля сервера, доступный через
  браузер по IP адресу и заданному порту сервера, к которому получает
  доступ конечный пользователь системы.

  =Клиентская программа= – отдельно устанавливаемое на ПК (рабочую
  станцию) программное обеспечение, настраиваемое на взаимодействие с
  сервером, которое использует конечный пользователь системы.

* Протоколы обмена данными

  Контроллеры и рабочие станции соединяются с центральным сервером по
  локальной сети, используя стек протоколов TCP/IP.

  Некоторые периферийные компоненты системы могут связываться с
  контроллерами или непосредственно с сервером и рабочими станциями по
  интерфейсу RS-485

* Серверная часть

  Серверную часть необходимо полностью переписать в соответствии со
  следующими критериями:

  - Необходимо отойти от связки php+appche, сервер должен иметь
    автономное ядро (бэкэнд, сервер приложений) которое возможно будет
    развернуть на платформах ОС семейств Windows или Linux. Выбор
    оптимальных средств (языка программирования) с помощью которых
    будет реализована данная задача на данный момент является
    приоритетной задачей.

  - В качестве сервера БД предлагается использовать бесплатные системы
    MySQL с базами InnoDB или PostgreSQL (выбор необходимо
    аргументировать).

  - Все требуемые администратору системы и конечному пользователю
    интерфейсы и средства должны быть реализованы в кроссплатформенном
    браузерном варианте. Т.е. система должна быть реализована по
    принципу «одного окна» (или точнее «всё на одной вкладке
    браузера»). В дальнейшем возможно создание клиентских приложений на
    замену браузерной реализации, но данная задача не является
    приоритетной.

  - Сервер должен иметь модульную структуру как по функционалу, так и
    по доступным конечным пользователям интерфейсам управления и
    администрирования (фронтэнду). Модули должны подключаться к серверу
    в процессе изначальной установки, либо легко подключаться
    после. Необходимо предусмотреть возможность инсталляции модулей как
    с носителя, так и из сетевого репозитория.

  - Ядро сервера и модули должны иметь встроенные средства
    защиты. Предполагается использование аппаратного ключа HASP или
    RuToken (возможно аналогов) для ядра и отдельных программных ключей
    лицензирования для подключения отдельных модулей.

  - При создании сервера необходимо разработать APIи техническую
    документацию для возможности дальнейшей интеграции нашего ПО с
    системами СКУД, 1С и т.д.

  - Необходима возможность объединения серверов в кластеры,
    т.е. несколько локальных серверов на отдельных парковках должны
    иметь возможность обмениваться информацией с центральным сервером в
    центре управления. Центральный сервер же должен иметь приоритет над
    локальными, имея возможность управлять СКД во всём кластере,
    тарифами и т.д.

* Основной функционал сервера:

  В базовом варианте сервер должен иметь собственно ядро, БД и два
  основных модуля (интерфейса) – администратора системы и парковщика.

  Администратор системы должен иметь следующие возможности:

  - Получать информацию обо всех стойках и терминалах, находящихся в
    локальной сети по факту настройки стоек на работу с данным сервером.

  - Изменение IP-адресов, ключей шифрования, номеров стоек, управления
    секторами, временем, информацией, выводимой на дисплей стоек и
    печатаемой на чеках, подключения и удалённого программного
    отключения периферийного оборудования на них (торговое
    оборудование, светофоры, табло), гибкой настройки логики работы
    сенсоров (фотоэлементов, магнитных петель).

  - Получение информации агрегируемую сервером со стоек - события
    въездов, выездов, оплаты, ошибки и т.п., которая должна писать в лог
    и быть доступна для выгрузке по дате в отчёт в формате *.xls.

  - Доступ к средствам тестирования работоспособности стоек (аналог
    текущего ParkingTest).

  - Управление пользователями системы, создание логинов и паролей,
    распределение прав доступа к интерфейсам из-под учётных записей и
    групп пользователей системы (в том числе и для самого себя).

  Оператор парковки должен иметь следующие возможности:

  - Открытие и закрытие шлагбаумов, подключённых к стойкам, находящимся
    в локальной сети.

  - Управление количеством свободных мест на парковке.

  - Мониторинг информации, приходящей со стоек (лога) в режиме
    реального времени.

* Дополнительные модули сервера

  Дополнительные модули должны подключаться к системе по запросу
  клиента в тех или иных сочетаниях. При этом, каждый из этих
  установленных модулей подключается администратором системы
  конкретному пользователю (группе пользователей).

** Модуль =платной парковки=

   Добавляет возможность работы с оплатой парковочного времени и
   управляет тарифами на парковке. В системы добавляется интерфейс
   администратор тарифов, с помощью которого можно изменять почасовую
   стоимость пребывания на парковке, бесплатное время пребывания на
   парковке, время бесплатного выезда с парковки после оплаты услуг и
   т.д.

** Модуль =СКУД=

   Добавляет возможность работы с бесконтактными картами
   доступа в безусловном режиме разрешения / запрета въезда. В систему
   добавляется интерфейс администратора СКУД, который позволяет
   заводить в систему карты доступа по их индивидуальному номеру,
   вводить информацию о владельцах карт (ФИО, гос. номер транспортного
   средства и т.п.), распределять карты по различным группам
   доступа. Группы доступа могут иметь различные права по времени
   возможного въезда/выезда с парковки, по посещению тех или иных
   секторов парковки, а также иметь численное ограничение количества
   въездов (т.е. карт выдано в группе 10, но данной группе на парковке
   принадлежит только 5 мест и одновременно на парковке / в секторе
   парковки может находиться только 5 машин). Карты доступа могут
   временно блокироваться, переноситься в архивные и окончательно
   удаляться администратором. Если установлены другие модули,
   работающие с б/к картами, администратор может изменять тип карт с
   одного на другой (абонемент, дебетовая). У оператора парковки при
   подключённом модуле СКУД в логе добавляются сообщения о въездах и
   выездах по картам. Также добавляется интерфейс аудитора СКУД,
   который позволяет пользователю с данными правами получить доступ к
   информации о картах доступа, но не даёт возможности её изменять.

** Модуль для =работы с абонементами=

   Добавляет возможность работы с бесконтактными картами в режиме
   оплаты услуг парковки владельцем карты на заданный срок –
   т.е. оплата на фиксированную сумму производится один раз в
   установленный срок. В систему добавляется интерфейс администратора
   абонементных карт,позволяющий заводить в систему абонементные карты
   по их индивидуальному номеру, вводить информацию о владельцах карт
   (ФИО, гос. номер транспортного средства, номер договора на
   предоставление услуг и т.п.), распределять карты по различным
   группам доступа и тарифными группам. Группы доступа используются те
   же, что и в модуле СКУД. Абонементные карты могут временно
   блокироваться, переноситься в архивные и окончательно удаляться
   администратором. Если установлены другие модули, работающие с б/к
   картами, администратор может изменять тип карт с одного на другой
   (СКУД, дебетовая).В интерфейс администратора тарифов добавляется
   возможность работы с тарифными группами, сроками и стоимостью
   оплаты для абонементов.У оператора парковки, при подключённом
   модуле работы с абонементами, в логе добавляются сообщения о
   въездах и выездах по картам и сроке действия карт. Также
   добавляется интерфейс аудитора абонементных карт, который позволяет
   пользователю с данными правами получить доступ к информации об
   абонементных картах исроках оплаты клиентом услуг, но не даёт
   возможности её изменять.

** Модуль для =работы по дебетовым картам=
   Добавляет возможность работы с бесконтактными картами в режиме
   оплаты услуг парковки владельцем карты по специальному тарифу –
   т.е. он кладёт деньги на карту через кассу, сумма фиксируется в
   платёжной системе парковки и далееденьги списываются с него исходя
   из времени пребывания на парковке при выездах, но по особым
   тарифам. В систему добавляется интерфейс администратора дебетовых
   карт,позволяющий заводить в систему дебетовые карты по их
   индивидуальному номеру, вводить информацию о владельцах карт (ФИО,
   гос. номер транспортного средства, номер договора на предоставление
   услуг и т.п.), распределять карты по различным группам доступа и
   тарифными группам. Группы доступа используются те же, что и в
   модуле СКУД. Дебетовые карты могут временно блокироваться,
   переноситься в архивные и окончательно удаляться
   администратором. Если установлены другие модули, работающие с б/к
   картами, администратор может изменять тип карт с одного на другой
   (СКУД, абонементная).В интерфейс администратора тарифов добавляется
   возможность работы с тарифными группами и стоимостью времени
   пребывания на парковке для дебетовых карт.У оператора парковки, при
   подключённом модуле работы с дебетовыми картами, в логе добавляются
   сообщения о въездах и выездах по картам и списанных со счёта
   средствах. Также добавляется интерфейс аудитора дебетовых карт,
   который позволяет пользователю с данными правами получить доступ к
   информации о дебетовых картах, состоянии счёта клиента и тарифном
   плане, но не даёт возможности ничего изменять.

** Модуль =акцептирования=

   Добавляет в систему возможность обнуления требующего оплаты билета
   со штриховым кодом через интерфейсную оболочку. В систему
   добавляется интерфейс акцептирования билета в котором пользователь
   может ввести в специальное поле номер билета (или считать номер
   сканером штрих-кода) и произвести либо безусловное акцептирование –
   сделать билет бесплатным для выезда навсегда изменив информацию о
   нём на сервере и выездных стойках, либо акцептирование на выезде– у
   клиента будет возможность покинуть парковку в течении бесплатного
   времени после акцептирования, либо акцептирование по тарифу –
   данному билету присваивается специальный тариф (используется список
   тарифов дебетового режима) и стоимость пребывания на парковке
   пересчитывается исходя из него. При акцептировании пользователь
   вводит комментарий, в котором пишется причина акцептирования. Вся
   информация о проведённых акцептированиях билетов (пользователь,
   номер билета, время акцептирования, сумма акцептирования) пишется в
   лог и доступна для ознакомления в интерфейсе аудитора
   акцептирования.

** Модуль =арендаторов=

   Добавляет в систему возможность обнуления требующего оплаты билета
   со штриховым кодом на кассах, стойках информации или через
   интерфейсную оболочку с помощью карты арендатора с последующим
   списанием обнулённой суммы на счёт владельца карты. В систему
   добавляется интерфейс администрирования арендаторов, в котором
   можно создавать пользователей – «арендаторов» и привязывать их
   бесконтактным картам и основным пользователям системы. Каждому
   арендатору выдаётся своя бесконтактная карта, для которой в системе
   администратором установлен режим акцептирования (режимы перечислены
   в описании модуля акцептирования, для дебетового режима
   устанавливается тариф). С помощью этой карты арендатор может
   акцептировать билет клиента, приложив сначала билет, а затем карту
   к стойке информации, кассе или введя номер билета на ПК, а затем
   приложив карту к считывателю на ПК. После этого клиент покидает
   парковку в соответствии с правилами акцептирования, а
   акцептированная сумма переводится на «овердрафтовый счёт» данного
   арендатора в системе. Все данные по этому счёту отображаются в
   интерфейсе счета арендаторов. Через этот интерфейс можно либо
   списать сумму, которую должен арендатор, либо распечатать
   фискальный чек через ККМ, подключённый к ПК, либо выгрузить форму
   счёта на оплату в банке.

** Модуль =кассира=

   Добавляет в систему возможность оплаты услуг парковки через ручную
   кассу на базе ПК к которому подключён ККМ и, опционально, денежный
   ящик и сканер штриховых кодов. В систему добавляются интерфейсы
   кассир и кассир – парковщик. В интерфейсе кассира пользователь
   может провести процедуру оплаты билета – вбить его номер (или
   считать номер сканером штрих-кода), выбрать тариф оплаты, принять
   сумму к оплает и распечатать выездной фискальный чек с суммой,
   рассчитанной системой исходя из времени и тарифа. При этом приём
   денег и выдача сдачи осуществляется непосредственно
   человеком. Кассир-парковщик имеет интерфейс оплаты совмещённый с
   интерфейсом обычного оператора парковки в котором есть возможность
   открытия и закрытия шлагбаума, доступ к логу и т.п.

** Модуль =бухгалтера=

   Добавляет в систему возможность получения
   финансовых отчётов по парковке и кассовым аппаратам (нарастающий
   итог, оборот по кассам и т.п.), а также делает возможным
   автоматическое снятие Z-отчётов, печать копий Z-отчётов, изъятие
   установленной суммы из автоматической кассы и т.д.

** Модуль =фотофиксации=

   Добавляет в систему фотографирования камерами по событию. В
   интерфейсе администратора системы добавляется функция привязки
   камеры к конкретной стойке и список событий, производимых со
   стойкой, по которым камера должна производить фотографирование. Во
   все логи, в том числе и у оператора парковки, к сообщениям о данных
   событиях прикрепляются фотографии. Также добавляются интерфейсы
   машины на парковке и аудиторфотофиксации в которых можно посмотреть
   фотографии всех машин, которые приехали на парковку и находятся на
   ней и, соответственно, приехали и уехали с парковки в установленный
   промежуток времени.

** Модуль =распознания номеров=

   Интеграция с SIP сервером VoIP связи Asterisk

** Модуль =дуплексной IP связи=

* Контроллер (требования)

   Новый контроллер парковочной системы должен быть разработан в
   соответствии со следующими критериями:

** Гибкость системы

   Плата и программное обеспечение должны быть выполнены так, чтобы
   была возможность масштабирования системы и при этом сохранения
   обратной совместимости программного обеспечения. Например, в
   определённый момент возникнет необходимость увеличить количество
   реле или COM-портов на плате, будет осуществлена доработка
   связанная с переразводкой, но при этом на новых контроллерах должно
   штатно работать и старое ПО, а на старых контроллерах работать
   новое ПО.

** Web-интерфейс для настройки контроллера

   Микроконтроллер должен иметь собственный Web-сервер для возможности
   доступа к его настройкам через локальную сеть по IP адресу и
   наличия функции перепрошивки и обновления программного обеспечения
   контроллера без физического доступа к нему.

** Обработка аудио

   Наличие модуля обработки аудио, аппаратного или возможности установки
   программного эккалайзера

** Работа с дисплеями
   монохромный 2,4строки и полноцветнный габаритами

* Неорганизованное

  Шлагбаум открывается и закрывается импульсами (длительность задается
  в настройках) до срабатывания концевиков или защиты.

  Если нет срабатывания концевиков, выполняется 3 попытки (с паузой
  0.2сек между импульсами).

  После завершения операции закрытия / открытия или при срабатывании
  защиты, выдается короткий (0.2сек) импульс стоп.

  R4 - красный светофор

  R5 - зеленый светофор


  Выход:

  Light GND - запрос арбитража проезда


  Оборудование:

  COM1 - принтер

  Card Reader - бесконтактный считыватель Wiegand

  RS485 - новое табло

  Звук

  - входы для подключения 2-х датчиков магнитной- выходы для управления
  2-мя шлагбаумами (открыть, закрыть, стоп);
  - для подключения принтера штрих кодов;
  - RS232 / USB для подключения сканера штрих кодов;
  - вход для подключения картридера бесконтактных карт;
  - RS485 / Ethernet для обеспечения связи с сервером;
  - дисплей для отображения состояния системы и информирования клиентов;
  - RS232 / USB для подключения цифровой фото/видео камеры;
  - кнопка выдачи билета;
  - буззер – для звукового сигнала;
  - светодиоды для индикации работы;
  - выход индикации несанкционированного проезда;
  - выход индикации ошибки контроллера (отсутствует связь с сервером,
  неисправность периферийного оборудования);
  - 2 резервных индикаторных выхода.
  - 2 резервных входа.
