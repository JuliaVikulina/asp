#+HTML_HEAD: <!-- -*- fill-column: 87 -*- -->
#+HTML_HEAD: <!-- org-toggle-inline-images -->

#+TITLE: Der Shlagbaumverk
#+INFOJS_OPT: view:overview toc:nil

#+NAME:css
#+BEGIN_HTML
<link rel="stylesheet" type="text/css" href="/css/css.css" />
#+END_HTML

Техническое задание и спецификация на разработку аппаратно-программного комплекса АСПП
(Автоматизированная Система Платной Парковки)

* Цель

  Создаем решение для оснащения платных парковок.

  Разрабатываемые компоненты:

  =Контроллер= - одноплатный микрокомпьютер на базе микропроцессора архитектуры ARM
  Cortex-А7/A8/A9.

  Допускается:
  - использование готовых решений одноплатных микрокомпьютеров;
  - варианты микропроцессоров с аналогичными характеристиками;
  - рассмотрение вариантов микропроцессоров отечественной разработки.

  Для прототипирования выбран микрокомпьютер: =EMBEST BeagleBone Black Rev C= с
  микропоцессором =ARM TI AM3358= (http://www.ti.com/product/AM3359).

  =Плата расширения= - интегральная схема, реализующая функционал связи с переферийными
  устройствами и дргуим оборудованием автоматической парковки. Может представлять из
  себя как единую плату, так и модульное решение.

  =Сервисная программа контроллера= - прошивка для микроконтроллера, представляющая
  собой встраиваемую операционную систему на базе ядра Linux и развёрнутое на ней
  сервисное программное обеспечение.

  Функции:
  - Подключение оборудования, используемого с платой расширения на лету без
    перезагрузки. Управление всеми вводами/выводами платы расширения (датчиками, торговым
    оборудованием, релейными развязками, и т.п). Вводы / выводы платы и перечень оборудования описаны в разделах:
    - [[*Периферийные устройства контроллера и протоколы связи][Периферийные устройства контроллера и протоколы связи]]
    - [[*Выводы на аудио оборудование][Выводы на аудио оборудование]]
    - [[*Выводы на сухой контакт реле][Выводы на сухой контакт реле]]
  - Технологическая настройка работы всего периферийного оборудования (перед
    использованием) подключенного к контроллеру парковочной системы из браузера по IP-адресу
    контроллера. Описание в разделах:
    - [[*Web-интерфейс для настройки контроллера][Web-интерфейс для настройки контроллера]]
    - Возможность гибкой переконфигурации алгоритмов и последовательности работы оборудования, подключенного
    к плате расширения (на ходу)
  - Выполнение функций абонентского устройства и взаимодействия с серверами IP
    связи/телефонии. Каждый контроллер должен распознаваться в локальной сети как
    SIP-устройство, чтобы оператор мог общаться с клиентом, находящимся у стойки.
  - Запрашивать и обрабатывать/хранить данные с IP камер. Осуществлять фотофиксацию по
    определенным событиям (нажатие кнопки, подъезд машины) и фотосьемку по временном
    интервале.
    - Осуществлять [[*%D0%A4%D0%BE%D1%82%D0%BE%D1%84%D0%B8%D0%BA%D1%81%D0%B0%D1%86%D0%B8%D1%8F%20%D0%B2%D1%8A%D0%B5%D0%B7%D0%B4%D0%B0][фотофиксацию въезда автомобилей]] по установленным событиям
    - Распознавание номеров сделанных фотографиях.
  - Осуществлять [[*%D0%97%D0%B2%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B5%20%D1%81%D0%BE%D0%BF%D1%80%D0%BE%D0%B2%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5][Звуковое сопровождение]] действий пользователя на всех этапах работы с
    оборудованием - проигрывание аудиозаписей по определенным событиям, в
    т.ч. проигрывание записей с SD-карты.
  - [[*%D0%A1%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BD%D1%8B%D0%B5%20%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B8%20%D0%BB%D0%BE%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%20%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D1%8B][Вести логирование сервисных сообщений работы системы на сервер и SD-карту]]
  - Иметь защиту от несанкционированного подключения (логин/пароль) и выполнять
    шифрование трафика при общении с сервером.
  - Обладать [[*%D0%9F%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF%20%D0%B0%D0%B2%D1%82%D0%BD%D0%BE%D0%BC%D0%BD%D0%BE%D0%B9%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B%20%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80%D0%B0][возможностью автономной работы контроллера]] в отсутствии связи с сервером
    кейсы, что делать)

  =Центральный сервер= - компьютер, на котором развёрнута программа управления
  парковкой и хранится база данных со всеми настройками системы и пользователей, а
  также история событий.

  =Серверное ПО= - это программа управления парковкой, через которую осуществляется
  настройка всех основных модулей системы и управление парковочной системой. Серверное
  ПО имеет ядро (сервер приложений?, бэкенд?), базу данных под управлением выбранной
  СУБД, модульный интерфейс (фронтенд) и гибкую систему лицензирования и защиты
  программных средств.

  =Клиентский интерфейс= - веб-интерфейс модуля сервера, к которому получает доступ
  конечный пользователь системы.

  =Клиентская программа= - отдельно устанавливаемое на ПК (рабочую станцию) программное
  обеспечение, настраиваемое на взаимодействие с сервером, которое использует конечный
  пользователь системы. Нужна для проброса ККМ.

* Описание функционирования
** DONE Общий принцип работы

   Клиент на автомобиле вьезжает в зону действия =датчика присутствия авто=, нажимает
   на кнопку и получает =билет= со =штрихкодом=.

   definition: [[*Датчик присутствия автомобиля][Датчик присутствия автомобиля]]

   В будущем планируется адаптировать систему также под карты Mifare.

   В штрикоде зашифровано:
   - идентификатор места вьезда
   - время вьезда
   - массогабаритные характеристики ТС клиента (например, в таком формате: 0 -
     легковой, 1 - средний, 2 - грузовик)

   =Штрихкод= должен быть зашифрован, чтобы избежать попыток подстановки данных со
   стороны клиента

   В =билете= также открытым текстом напечатано:
   - текущее время вьезда
   - идентификатор места вьезда
   - номер сектора парковки / тарифной зоны
   - уникальный код билета (буквенно-цифровой)

   После того как пользователь забирает билет, открывается шлагбаум. Взятие билета
   пользователем мы ослеживаем через протокол общения с принтером, который описан в
   документации. Документация будет лежать тут: [[file://home/pyub/repo/asp/devices/barcode_thermal_printer][devices/barcode_thermal_printer]]

   Во время проезда машины под стрелой шлагбаума его закрытие невозможно - наличие
   автомобиля фиксируется фотоэлементом на линии стрелы и датчиком за ней. Это сухой
   контакт, описан в разделе [[*Выводы на сенсоры и кнопки][выводы на сенсоры и кнопки]]. По факту проезда шлагбаум
   закрывается. После въезда начинается допустимое бесплатное время нахождения на
   парковке.

   Также имеется возможность попасть на парковку по бесконтактным картам доступа
   Em-Marine, которые заранее программируются и выдаются клиентам (система СКУД для
   постоянных клиентов и владельцев). Со считывателем СКД (Em-Marine Iron Logic Matrix
   V / Matrix II EH) мы общаемся по протоколу "Wiegand 26", документация.

   Далее посетитель парковки должен произвести оплату парковочного времени. Это воможно
   сделать тремя осовными способами:
   - оплатить на автоматической кассе
   - оплатить на ручной кассе (ПК на котором оператор в программе принимает оплату)
   - акцептировать билет у одного из арендаторов (сбросить время или перевести его на
     счёт арендатора)
   В рамках пилотного проекта мы делаем только оплату на ручной кассе, где кассир
   сообщает системе о проведенной оплате через броузер.

   В любом случае информация с билета считывается с помощью сканера штрих кодов (для
   карт Mifare будет использоваться считыватель-программатор), либо на ПК вводом
   буквенно-цифрового кода с билета. При считывании посетителю сообщается сумма оплаты,
   которую он должен внести. По факту приёма оплаты печатается фискальный чек, он же
   выездной билет, а въездной билет аннулируется. Кроме оплаты билет может быть
   акцептирован (обнулён) арендатором с помощью специальной карты  или на ПК (об этом
   подробнее в описании фнкционала акцептирования).

   Стоимость парковки может варьироваться в зависимости от времени пребывания на ней,
   тарифной сетки (разные тарифы в разное время суток и дни недели) и тарифных зон (на
   одной парковке может быть несколько секторов, в каждом из которых парковка стоит по
   разному, между ними стоят проездные стойки).

   После оплаты устанавливается допустимое время нахождения на парковке до выезда. Если
   посетитель находится больше времени, чем было установлено, ему необходимо снова
   оплачивать время.

   На выезде посетитель парковки при попадании автомобиля в зону действия датчика
   присутствия подносит свой билет к сканеру штрих кодов и, если допустимое время
   нахождения на парковке не истекло, ему позволяется покинуть парковку (в случае
   Mifare карт карта вставляется в приемник и он её заглатывает). Также имеется
   [[*%D0%9F%D1%80%D0%BE%D0%B5%D0%B7%D0%B4%20%D0%BF%D0%BE%20%D0%BA%D0%B0%D1%80%D1%82%D0%B5%20%D0%A1%D0%9A%D0%A3%D0%94][возможность покинуть парковку по бесконтактным Em-Marine картам]]

** WAIT Парковочные места, тарифные зоны и сектора
*** WAIT Распределение паркомест
*** WAIT Тарифная зона

    Необходимо реализовать гибкую систему тарифов, при этом постаравшись
    максимально сохранить автномность системы в случае падения связи с
    сервером.

    Основные единые настройки бесплатного времени:
    - бесплатное время после въезда (мин)
    - бесплатное время на выезд после оплаты (мин)

    Эти характеристики должны быть индивидуальны для разных секторов парковки. Т.е.,
    например, в секторе открытого паркинга одни тарифы, а в секторе закрытого -
    другие. Между секторами стоит проездная стойка со сканером штрих кодов (для Mifare
    парковки это сделать проще в автономном режиме). При поднесении она переносит на
    сервере и всех соседних стойках билет в другой сектор. При этом если машина отстояла
    t1 времени в одном секторе, а потом поехала в другой, то данные по оплате
    суммируется, а бесплатное время во втором секторе не считается.

    Основые вещи:
    - Со скольки до скольки работает парковка (осуществляется впуск и выпуск)
      Допустимо по картам СКУД пускать например круглосуточно, а по чекам - только днем
    - Бесплатное время - время, которое машина может стоять на парковке до требования
      оплаты. В течении его она может выехать бесплатно.
    - Время на выезд - время за которое машина может покинуть парковку после оплаты
      водителем в кассе. Если не успел - время на выезд не учитывается.
    - Штраф - сумма, которая взимается с человека, если он потерял вьездной документ.
    - Стоимость часов [TODO:pyub]:
      Имеются следующие основыне тарифные характеристики:
      - стоимость 1го..2го..23го..24го.. часа после истечения бесплатного времени
    - коэффициент стоймости в зависимости от времени суток (с 20:00 до 22:00 k=2, с 9:00 до 18:00 k=0,5)
    - коэффицикнт стоймости в зависимости от дня недели (пн, вт, ср, чт, пт k2=1, сб,вс k2=2)

*** WAIT Сектор парковки

    Секторальность - например есть крытая и открытая система парковки, между ними
    стойка. Если пользователь на ночь хочет на закрытую парковку - там другой тариф,
    все это надо считать суммируя. В пилотном проекте не делаем, но учитывать нужно при
    программировании системы тарифов.
** DONE Логирование сообщений

   Контроллеры взаимодействуют между собой и сервером через отправку и получение
   [[*%D0%A1%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D0%B5][сообщений]].

   Все сообщения должны писаться в лог-файл. Основное место хранения лога работы
   системы - сервер. Каждый контроллер ведёт свою отдельную историю, храня в своей
   памяти сообщения за время t (или определённое кол-во сообщений), дублируя эти данные
   на агрегирующий сервер, где они собираются в единый лог. В случае отсутствия связи
   контроллер перестёт удалять сервисные сообщения из своего лога, собирая "хвост"
   вплоть до появления связи. Если место для сообщений заканчивается, а связь не
   появилась - возможно удаление некричтиных сообщений и запись на их место кричиных.

   Необходимо обеспечить постоянную запись истории работы системы:
   - проходящих штатно событий (например, событие выезда, событие выезд, произошла оплата);
   - кодов известных ошибок в работе контроллера и основного ПО;
   - кодов известных ошибок в работе переферийного оборудования (обработка кодов ошибок из протоколов взаимодействия самих устройств);
   - кодов известных ошибок возникающих при нарушении связи между контроллерами и / или сервером;
   - сообщений о неизвестных ошибках.

   Контроллер держит в своей постоянной памяти единовременно лог событий не превышающий
   10000 записей. При этом он постоянно отправляет сообщения об ошибках на агрегирующий
   сервер, где они систематизируются в доступном для оператора или администратора виде и
   хранятся долгосрочно. Если связь нарушена, контроллер сохраняет сообщения сверх 10000
   записей вплоть до заполнения памяти. Информационные сообщения при этом могут не
   сохраняться.

   В случае наличия SD карты вставленной в контроллер, система дублирует все логи не
   только на сервер, но и на неё. Объём хранимого на SD карте должен выставляться в
   настройках контроллера в мегабайтах.

** TODO Состояния стойки при проезде

   defenition: [[*Стойка][Стойка]]

   Независимо от используемого комплекта периферийного оборудования контроллера при
   въезде может находится в следующих состояниях:

   [TODO:pyub] - для всех состояний необходимо описать условия входа и выхода в состояние,
   чтобы сгенерировать код диспетчера машины состояний.

   #+CAPTION: Состояния конечного автомата пользователя
   #+NAME: in_state
     | action             | from    | to      |
     |--------------------+---------+---------|
     | standby-to-finding | standby | finding |
     | finding-to-dialog  | finding | dialog  |
     | dialog-to-init     | dialog  | init    |
     | init-to-goon       | init    | goon    |
     | goon-to-fin        | goon    | fin     |

   Теперь мы можем полностью описать поведение пользователя как конечный автомат:

   #+NAME: in_state_graph
   #+BEGIN_SRC emacs-lisp :var table=in_state :results output :exports none
     (mapcar #'(lambda (x)
                 (princ (format "%s -> %s [label =\"%s\"];\n"
                                (second x) (third x) (first x))))
             table)
   #+END_SRC

   #+BEGIN_SRC dot :file img/in-state.png :var input=in_state_graph :exports results
     digraph G {
       rankdir = LR;
       $input
     }
   #+END_SRC

   #+results:
   [[file:img/in-state.png]]

*** DONE Состояние ожидания (=standby=)

    Режим работы в котором датчик стойки не видит автомобиля и не идёт никакой другой
    процесс. В нём стойка реагирует на действия пользователя только сервисными
    сообщениями, выводя на дисплей либо сообщение о том, что нет автомобиля, либо
    сервисное сообщение о статусе карты/чека. Вся периферия неактивна.

    Различие в алгоритмах режима ожидания главным образом заключается в том, что к стойкам
    может быть подключен разный набор датчиков, соответственно условие перехода в
    следующее состояние зависит от конкретного набора.

    Также в зависимости от настроек пользователя по разному работает взаимодействие с
    пользователем: нет машины - никакой реакции, продажа карточек и.т.п.

    [TODO:pyub] - создать отдельные разделы описывающие эти варианты и дать на них ссылки здесь.

    [[*%D0%A1%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B5%20%D0%BE%D0%B6%D0%B8%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20(%3Dstandby%3D)][Состояние ожидания (=standby=)]] для вьезда с бумажными билетами

*** DONE  Подъезд машины к стойке (=finding=)

    Процесс управления сложной процедурой подъезда машины к стойке (через шлюз из двух шлагбаумов, по
    рампе) и/или  определения датчиком (петлей индуктивности, фотоэлементом, датчиком
    магнитного поля) габаритов / массы  автотранспортного средства, а также контроля подъезда к стойке.

    [[*%D0%9F%D0%BE%D0%B4%D1%8C%D0%B5%D0%B7%D0%B4%20%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%8B%20%D0%BA%20%D1%81%D1%82%D0%BE%D0%B9%D0%BA%D0%B5%20(%3Dfinding%3D)][Подьезд машины к стойке (=finding=)]] для вьезда с бумажными билетами

**** Входные воздействия:
***** Машина уезжает с датчика магнитной петли А

      Когда машина находится на магнитной петеле и стойка находится в состоянии
      =finding=, но пользователем ещё не соверщены действия, инициирующие переход в состояние машина покидает зону действия датчика и стойка возвращается в
      состояние =standby=

***** Администратор отключает проверку датчика А

      Оператор может отключить датчик присутствия автомобиля из интерфейса на
      сервере. Сервер должен послать сообщение контроллеру ([TODO:rigidus]), что
      приведет к возникновению события detector-disabled.

***** Нажата кнопка "Печать билета"
***** Нажата кнопка "Вызов оператора"
***** Машина оказывается на датчике магнитной петли Б
***** Входящий сигнал с датчиков принтера

      См.  [[*%D0%9D%D0%B5%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BD%D0%BE%D1%81%D1%82%D1%8C%20%D0%BF%D1%80%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B0][Неисправность принтера]]

*** TODO Стойка в диалоговом режиме (=dialog=)

    [todo:pyub] Допилить раздел, раскидать на въезд и выезд.

    После срабатывания датчика присутствия стойка начинает диалог с посетителем, выводя
    на дисплей сообщения о необходимости совершения действий, ошибок и т.п. В этом
    режиме посетитель может совершить действия, которые в конечном счёте нажать кнопку и получить от периферийного устройства
    въездной документ (чек или карту) приложить к считывателю карту СКУД. На этом
    этапе осуществляется арбитраж в случае использования реверсивного проезда (один
    шлагбаум на две стойки с разных сторон) или использования двух стоек для левого и
    правого руля.

    После срабатывания датчика присутствия стойка начинает диалог с посетителем, выводя
    на дисплей сообщения о необходимости совершения действий, ошибок и т.п. После
    прикладывания пользователем въездного документа, либо оплатного документа, либо
    карты СКУД, стойка совершает проверку возможности выезда, статус оплаты и так
    далее. На этом этапе осуществляется арбитраж в случае использования реверсивного
    проезда (один шлагбаум на две стойки с разных сторон) или использования двух стоек
    для левого и правого руля. Также на этом этапе выезд может быть совмещён с оплатой
    и между процедурами 2 и 3 выполняется процедура оплаты, как на автоматическом
    кассовом терминале.

    Разрешение для посетителя на пребывание на парковке в течение
    определенного промежутка времени после оплаты задается
    арендатором. При этом клиентская программа арендатора шлет
    информацию на центральный сервер, а центральный сервер сохраняет
    информацию и транслирует ее контроллеру. Контроллер сохраняет
    полученную информацию в памяти. При выезде автомобиля контроллер
    проверяет, истек срок пребывания на парковке или нет, и разрешает
    или запрещает выезд. Время выезда передается на центральный
    сервер.

    Есть диалоговый режим, который при неплаченном проезде приводит к процедуре оплаты

*** TODO Инициация процедуры проезда (=init=)

    После того, как посетителю разрешён въезд (из презентера устройства забран чек или
    карта, или успешно проверен статус карты СКУД) контроллер инициирует процесс
    открытия шлагбаума, замыкая соответсвующие реле и принимая сигналы с концевиков
    шлагбаума (или давая выставленный в миллисекундах импульс, если концевиков нет).

    Различия [TODO:pyub] по выходныи данным устройств, приводящим к выходу из состояния.

*** TODO Процедура проезда (=goon=)

    После открытия шлагбаума контроллер контролирует проезд машины под стрелой,
    принимая сообщения с датчика безопасности (фотоэлемент на линии стрелы) и датчика
    завершения проезда (петля индуктивности за стрелой, фотоэлемент, датчик МП). В эту
    же процедуру может входит контроль проезда по рампе или через шлюз, находящийся за
    стойкой.

    Различия [TODO:pyub] по рампе/шлюзу/реверсивному движению и аналогично предыдущему.

*** TODO Процедура завершения проезда (=fin=)

    Процесс закрытия шлагбаума после проезда машины, отправки итоговых данных о
    совершённом проезде на сервер и возвращения стойки в режим ожидания.

    Различия [TODO:pyub] по отправляемым на сервер данным от периферии и настроек
    тарифных зон.

*** TODO Стойка в состоянии блокировки (=lock=)

    Состояние, в которое переходит стойка в случае некорректной работы критичного для
    работы системы опросного [[*%3D%25type%25%20%D0%BF%D0%B5%D1%80%D0%B5%D1%84%D0%B5%D1%80%D0%B8%D0%B9%D0%BD%D1%8B%D0%B5%20%D1%83%D1%81%D1%82%D1%80%D0%BE%D0%B9%D1%81%D1%82%D0%B2%D0%B0%3D][периферийного устройства]].  Для стоек, на которых нет
    торгового оборудования (т.е.работы с деньгами) блокировка должна быть
    частичной. Например, если заканчивается бумага в термопринтере, выводится сообщение
    о том, что "Печать билета невозможна, обратитесь к персоналу парковки", но при этом
    въезд по пластиковым билетам (картам) для постоянных клиентов по врежнему возможен.

    В случае возникновения ситуации блокировки стойка регулярно отправляеет на сервер
    сервисное сообщение о том, что она работает в нештатном режиме и требуется
    произвести змену бумаги или ремонт устрйоства.

*** WAIT Процедура оплаты (=payment=)

    В пилотном проекте мы пострараемся избежать реализации этого.

    Это состояние может быть активировано и после =dialog= и после =standby=. Может
    быть касса, совмещенная с выездом, на ней есть и торговое
    оборудование. Пользователь может прийти пешком из =standby= и оплатить или
    подьехать - тогда входом может быть любое состояние и выходом может быть =standby=
    или =init=.

** TODO Обработка сигналов и ситуаций
*** Входящие сигналы с датчиков

    Принцип функционирования датчика присутствия автомобиля: транспортное средство
    находится в зоне  датчика, в датчике замыкается реле, с реле на контроллер
    парковочной системы идёт ток 5/12/24 В (в зависисмости от устройства), пока ток идёт -
    контроллер знает о состоянии данного датчика.

    Для датчика присутсвия наличие сигнала значит, что автомобиль находится в его зоне действия.
    Для датчика безопасности, что объект находится на линии стрелы шлагбаума.
    Для датчика контроля стрелы шлагбаума, что стрела находится в определённном
    положении - открыта, закрыта или в процессе движения.

    Для =петли индуктивности=  является отсутсвие сигнала,
    наличие сигнала означает присутсвие автомобиля на петле.
    Для =фотоэлемента безопасности= в нормальном состоянии я

    В случае отказа сенсорного устройства оператор устанавливает флаг "сенсорное
    устройство неисправно" и проверка сигнала на данном сенсоре отключается.

    Как определить неисправность? - Никак. Машина подьезжает на петлю - ничего не
    происходит.

    Оператор сам может выставить в интерфейсе флаг =датчик присутствия неисправен=,
    в этом случае все проверки, связанные с данным датчиком, не выполняются.

    С случае отключения датчиков:

    Отключена петля А - несмотря на то, что на петле А нет автомобиля стойка всегда в диалоговом режиме.
    Если отключен фотоэлемент безопасности - в случае отсуствия сигнара in с ф/э -
    процедцра закрытие шлагбаума не прерывается и шлагбаум не блокирется.

    Если на петле Б нет автомобиля - шлагбаум закрывается по выставлемому оператором  =таймауту закрытия шлагбаума=,
    отсчитываему после получения сигнала о проезде с датчика безопасности (фотоэлемент).

    Если фотоэлемент и петля Б не функционируют одновременно - шлагбаум закрывается только
    по выставляемому оператором  таймауту закрытия шлагбаума, отсчитываемому после приход
    сигнала об открытии шлагбаума.

    Если отсуствуют / не работают =датчики статуса стрелы шлагбаума= (концевики открытия /
    закрытия) - то при открытие шлагбаума напряжение на него подаётся в соотвествии с
    настроенным =временим импульса открытия шлагбаума=, а при закрытии в соответсвии с
    настроенным =ввременим импульса закрытия шлагбаума=. Статус концевиков при этом не
    учитывается.

*** Отмена проезда по чеку

    Если алгоритм въезда не завершён до конца, не важно на каком этапе это произошло,
    то полученный билет аннулируется через время t.

*** Повторная печать въездного билета

    Для невозможности печати человеком без машины печати нового билета у въездной
    стойки для бесплатного выезда, используется датчик магнитной петли А и алгоритм
    перехода из режима ожидания в режим диалога при появлении машины в зоне датчика. В
    случае, если билет всё-же печатается (например, для обмана системы используется
    другая машина на въезде), то либо следующий въехавший автомобиль остаётся без
    билета и посетитель вынужден оплачивать штраф, либо, если машина не въехала,
    срабатывает [[*%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0%20%D0%BE%D1%82%D0%BC%D0%B5%D0%BD%D1%8B%20%D0%BF%D1%80%D0%BE%D0%B5%D0%B7%D0%B4%D0%B0%20%D0%BF%D0%BE%20%D1%87%D0%B5%D0%BA%D1%83...][обработка отмены проезда по чеку]]

*** Обработка ошибок в работе принтера

    Термопринтер имеет собственный набор датчиков и перечень возможных возникающих
    проблем, которые должны приводить к отправке стойки сервисных некритичных сообщений или
    в состояние блокировки (=lock=):
    - замятие бумаги - блокировка
    - оптодатчикидатчики контроля презентера долго заняты - блокировка
    - билет отправлен в сброс - блокировка
    - кончиалсь бумага - блокировка
    - есть сигнал с оптодатчика контроля кол-ва бумаги - сервисное сообщение на сервер

*** Повторное прикладывание использованного билета
*** Проезд по шлюзу / рампе

    Изменения касаются процедуры подъезда, всё начинается не с датчика присутствия у
    стойки, а с датчика в начале "шлюза" из двух шлагбаумов - одного в начале участка
    подъезда к стойке по рампе, второго - за стойкой. В данном решении присутсвуют три
    датчика присутвия - на начале шлюза, у стойки и за стрелой, а также фотоэлемент на
    линии стрелы.

    1.1. Машина начинает заезд на рампу, с сенсорного устройства в начале рампы (контроллер петли индуктивность, фотоэлемент и т.п.) на контроллер отправляется сигнал.
    1.2. Контроллер получает сигнал о том, что начат проезд рампы и переходит в режим ожидания освобождения сенсора.
    1.3. Машина начинает подъём по рампе,  сигнал с сенсорного устройства прекращается (оно остаётся позади машины).
    1.4. Контроллер фиксирует прекращение сигнала и блокирует рампу:
         - замыкает реле, отвечающее за закрытие шлагбаума №1, находящегося в начале рампы;
         - замыкает реле, отвечающее за красный свет на светофоре в начале рампы;
         - отправляет на сервер инфосообщение "Рампа занята".
    1.5. Машина подъезжает к стойке,  с сенсорного устройства у стойки (контроллер петли индуктивность, фотоэлемент и т.п.) на контроллер отправляется сигнал.
    1.6. Контроллер получает сигнал о том, что у стойки находится машина и инициирует процедуру инициации проезда.
    1.7. На сервер отправляет инфосообщение "Машина у стойки въезда".
    5.3. Контроллер открывает шлагбаум в начале рампы, зажигает зелёный свет на светофоре в начале рампы.
    5.4. На сервер отправляется сообщение "Рампа свободна".

*** WAIT Фотофиксация въезда

    В пилотнике не надо

    Опциональное действие, которое может совершаться параллельно с любым действием
    контроллера (выбирается в настрйоках контроллера). В процессе фотофиксации камера
    (или камеры), IP которой указан в настройках контролера, получает запрос на
    фотографирование, после чего возвращает контроллеру фото, которое сохраняетя им на
    SD носитель.

*** WAIT Звуковое сопровождение

    В пилотном проекте не реализуем, но - задел на будущее

    Опциональное действие, которое может совершаться параллельно с выводом сообщений на
    дисплей, дублируя их аудиозаписями, лежащими на SD носители. Данные аудиофайлы
    должны загружаться и сопоставляться с текстовыми сообщениями через интерфейс
    настройки контроллера.

    В пилотнике не надо

    Опциональное действие, которое может соврешаться параллельно с
    выводом сообщений на дисплей, дублируя их аудиозаписями, лежащими
    на SD носители. Данные аудиофайлы должны загружаться и
    сопоставляться с текстовыми сообщениями через интерфейс настройки
    контроллера.

** TODO Алгоритмы проезда
*** TODO Алгоритм простого въезда по чеку

    Простой алгоритм для парковки, работающей по чекам со стандартным комплектом
    датчиков (петли А,Б и фотоэлементы). В алгоритме введены светофор и счётчик мест
    (светодиодное табло).

    [[*%D0%92%D1%8A%D0%B5%D0%B7%D0%B4%D0%BD%D0%B0%D1%8F%20/%20%D0%B2%D1%8B%D0%B5%D0%B7%D0%B4%D0%BD%D0%B0%D1%8F%20%D1%81%D1%82%D0%BE%D0%B9%D0%BA%D0%B0%20%D1%81%20%D0%B2%D1%8B%D0%B4%D0%B0%D1%87%D0%B5%D0%B9%20%D0%B1%D1%83%D0%BC%D0%B0%D0%B6%D0%BD%D0%BE%D0%B3%D0%BE%20%D0%B1%D0%B8%D0%BB%D0%B5%D1%82%D0%B0,%20%D0%A1%D0%9A%D0%A3%D0%94%20%D0%B8%20IP-%D1%81%D0%B2%D1%8F%D0%B7%D1%8C%D1%8E][Состав оборудования въездной / выездной стойки с выдачей бумажного билета, СКУД и
    IP-связью]].

    Описание состояния: [[*%D0%A1%D1%82%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%B2%20%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D0%B8%20%D0%B1%D0%BB%D0%BE%D0%BA%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0%D0%B8%20(%3Dlock%3D)][Стойка в состоянии блокировкаи (=lock=)]] возникающего при
    нарушении штатной работы кричтичного опросного периферийного устройства.

    Предварительный список [[*%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0%20%D0%BE%D1%88%D0%B8%D0%B1%D0%BE%D0%BA%20%D0%B2%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B5%20%D0%BF%D1%80%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B0][Обработка ошибок в работе принтера]]

**** DONE Состояние ожидания (=standby=)

     См. [[*%D0%A1%D1%82%D0%BE%D0%B9%D0%BA%D0%B0%20%D0%B2%20%D1%80%D0%B5%D0%B6%D0%B8%D0%BC%D0%B5%20%D0%BE%D0%B6%D0%B8%D0%B4%D0%B0%D0%BD%D0%B8%D1%8F%20(%3Dstandby%3D)][Стойка в режиме ожидания (=standby=)]]

     Машина подъезжает к стойке, срабатывает =датчик присутствия автомобиля= перед
     стойкой (=датчик присутствия А=) и информирует контроллер о том, что машина перед стойкой.

     Контроллер переключается в =finding=.

     #+NAME: define_events
     #+BEGIN_SRC lisp
       (define-event car-presence (:standby detector)
         (let ((controller (get-controller-by-detector detector)))
           (trans controller :standby :finding)))
     #+END_SRC

     Если машины нет на датчике А, то клиент не может сделать никаких действий -
     при нажатии на кнопку печати билета или приложении пластиковой карты стойка
     сообщает ему: "автомобиль не обнаружен"

     #+NAME: define_events
     #+BEGIN_SRC lisp
       (define-event push-button (:standby button)
         (let ((controller (get-controller-by-detector button)))
           (send-message (display controller) "Автомобиль не обнаружен")))
     #+END_SRC

***** Обработка отказов
****** Администратор отключает проверку датчика А

       См. [[*%D0%90%D0%B4%D0%BC%D0%B8%D0%BD%D0%B8%D1%81%D1%82%D1%80%D0%B0%D1%82%D0%BE%D1%80%20%D0%BE%D1%82%D0%BA%D0%BB%D1%8E%D1%87%D0%B0%D0%B5%D1%82%20%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D1%83%20%D0%B4%D0%B0%D1%82%D1%87%D0%B8%D0%BA%D0%B0%20%D0%90][Администратор отключает проверку датчика А]]
       Стойка автоматически переходит в =finding=;

       #+NAME: define_events
       #+BEGIN_SRC lisp
         (define-event detector-disabled (:standby detector)
           (let ((controller (get-controller-by-detector button)))
             (trans controller :standby :finding)))
       #+END_SRC

****** Неисправность принтера

       См. [[*%D0%9E%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0%20%D0%BE%D1%88%D0%B8%D0%B1%D0%BE%D0%BA%20%D0%B2%20%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B5%20%D0%BF%D1%80%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B0][Обработка ошибок в работе принтера]]
       [TODO:unrimah] Добавить перечень возможных отказов и ошибок принтера VKP-80.

       Когда возникает проблема с принтером это приводит к возникновению события
       ([TODO:rigidus] написать код) =printer-problem=. Обработчик этого события должен в
       большинстве случаев перевести стойку в состояние =lock=

**** TODO Подьезд машины к стойке (=finding=)

     [[*%D0%9F%D0%BE%D0%B4%D1%8A%D0%B5%D0%B7%D0%B4%20%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%8B%20%D0%BA%20%D1%81%D1%82%D0%BE%D0%B9%D0%BA%D0%B5%20(%3Dfinding%3D)][Подъезд машины к стойке (=finding=)]]

     При переключении в активный режим происходят следующие действия:
     - Замыкается реле, отвечающее за красный сигнал на светофоре
     - На сервер отправляет инфосообщение "Машина у стойки въезда".

     #+NAME: output_actions
     #+BEGIN_SRC lisp
       (define-action red-trafic-light (:standby :finding controller)
         (send-signal (trafic-light controller) :red))

       (define-action send-to-server-car-is-present (:standby :finding controller)
         (send-message (parent-server controller) :car-is-present))
     #+END_SRC

     [TODO:pyub] - Что если датчик присутствия автомобиля показывает присутствие машины
     слишком долго? Например минут 20?

**** TODO Диалоговый режим (=dialog=)

     При переходе в диалоговый режим контроллер переводит периферийные устройства в
     режим обслуживания клиента:
      - включается подсветка кнопки печати билета;
      - на дисплей выдаётся информационное сообщение "Нажмите кнопку и получите билет".

     #+NAME: output_actions
     #+BEGIN_SRC lisp
       (define-action print-ticket-button-light-on (:finding :dialog controller)
         (send-signal (print-ticket-button controller) :on))

       (define-action show-display-press-button-and-get-ticket (:finding :dialog controller)
         (send-message (display controller) "Нажмите кнопку и получите билет"))
     #+END_SRC

     В этом режиме стойка обрабатывает возможные действия клиента:

***** Печать билета по требованию клиента

      Клиент нажимает кнопку печати билета, сигнал с кнопки приходит на сенсорный вход
      контроллера.

      Контроллер получает сигнал и отправляет на принтер команду "напечатать билет с
      необходимой информацией" (штрих-код, зашифрованный в соответствии с
      предустановленным кодом; текущее время; номер терминала въезда; номер тарифной
      зоны; предустановленную доп. информацию).

      Пользователю на экран выводится предложение подождать.

      [TODO:pyub] - Тут скорее всего нужен таймер с watch-догом?

      #+NAME: define_events
      #+BEGIN_SRC lisp
        (define-event ticket-printing (:dialog print-button)
          (let ((controller (get-controller-by-print-button print-button)))
            (send-message (display controller) "Распечатывается билет... Пожалуйста подождите..")
            (send-command (printer contriller)
                          :print-ticket
                          barcode
                          current-time
                          (terminal-number controller)
                          (tariff-zone controller)
                          additional-data)))
      #+END_SRC

      Принтер печатает билет, его сенсоры контролируют состояние печати (возможно
      замятие, окончание бумаги и т.п.).

      [TODO:pyub] - Необходимо все возможные ситуации рассмотреть, вместе с их
      последствиями, т.е. что делаем в каждом из случаев.

      #+NAME: ticket_printing_emergency
      #+BEGIN_SRC lisp
        (define-emergency-event paper-jam (:dialog printer)
          (TODO))

        (define-emergency-event paper-over (:dialog printer)
          (TODO))
      #+END_SRC

      Если печать завершена успешно - билет находится в презентере и контроллер должен
      сам вызывать событие =printing-completed-successfully=

      В обработчике этого события Контроллер блокирует периферию, защищая систему от
      повторного получения въездного документа. На дисплей выводится сообщение
      "Забирите билет".

      [TODO:pyub] - Какую именно периферию блокирует контроллер?

      В этом же обработчике устанавливается Watchdog timer на несколько секунд, который
      вызовет событие =get-ticket-watchdog-timer-over= если клиент не заберет билет в
      течении этого времени.

      #+NAME: define_events
      #+BEGIN_SRC lisp
        (define-event printing-completed-successfully (:dialog controller ticket)
          ;; Выключаем подсветку кнопки
          (send-signal (print-ticket-button controller) :off)
          ;; Выводим сообщение на экран
          (send-message (display controller) "Заберите билет")
          ;; Устанавливаем таймер
          (set-watchdog 5 #'get-ticket-watchdog-timer-over ticket))
      #+END_SRC

      Если билет не забран из презентера клиентом более t секунд - принтер сообщает об
      этом контроллеру, контроллер отбивает ошибку на сервер и анулирует билет.

      [TODO:pyub] - это еще не все, я правильно понимаю, что надо перевести стойку в
      режим =finding=?

      #+NAME: define_events
      #+BEGIN_SRC lisp
        (define-event get-ticket-watchdog-timer-over (:dialog controller ticket)
          (reset-watchdog get-ticket-watchdog-timer-over)
          (send-message (parent-server controller) :get-ticket-watchdog-timer-over)
          (ticket-cancel ticket))
      #+END_SRC

      Если клиент забирает билет из презентера, принтер сообщает об этом контроллеру,
      вызывая событие =get-printed-ticket-successfully=. Контроллер сообщает на сервер
      о том, что билет напечатан и прикладывает сам билет, а затем переходит в
      следующее состояние

      #+NAME: define_events
      #+BEGIN_SRC lisp
        (define-event get-printed-ticket-successfully (:dialog controller ticket)
          (reset-watchdog get-ticket-watchdog-timer-over)
          (send-message (parent-server controller) :get-ticket-watchdog-timer-over ticket)
          (trans controller :dialog :init))
      #+END_SRC

      [TODO:pyub] - Необходимо знать, что происходит, когда сервер получает все эти
      сообщения от контроллера.

**** TODO Инициация проезда (=init=)

     При переходе в состояние =init= контроллер замыкает реле, отвечающее за открытие
     шлагбаума за стойкой (реле замкнуто либо до прихода на сенсорный ввод сигнала
     "открыт", либо по длине импульса из настроек контроллера)

     [TODO:pyub] - Как разделять эти два инварианта?

     Контроллер сообщает серверу "Открытие шлагбаума стойки №"

     Если у нас нет концевика, то ставим watchdog на открытие шлагбаума

     #+NAME: output_actions
     #+BEGIN_SRC lisp
       (define-action barrier-open (:dialog :init controller)
         (send-signal (barrier controller) :open)
         (send-message (parent-server controller) :barrier-open controller)
         (if barrier-limit-switch-not-present
             (set-watchdog 5 #'barrier-open-confirm)))
     #+END_SRC

**** TODO Процедура проезда (=goon=)

     Когда стрела шлагбаума открывается, в шлагбауме срабатывает концевик открытия -
     сигнал с него приходит на сенсор "открытие" контроллера. Если концевика нет, то мы
     генерируем его срабатывание по таймеру, запущенному в =barrier-open=

     Контроллер фиксирует факт того, что шлагбаум в открытом положении и совершает
     следующие действия:
      - замыкает реле, отвечающее за зелёный свет на светофоре;
      - размыкает реле, отвечающее за красный свет на светофоре;
      - сообщает серверу "Шлагбаум стойки № открыт"

     #+NAME: define_events
     #+BEGIN_SRC lisp
       (define-event barrier-open-confirm (:goon controller)
         (send-signal (trafic-light controller) :green)
         (send-message (parent-server controller) :barrier-open-confirm controller))
     #+END_SRC

     Когда машина пересекает линию фотоэлемента безопасности (стрелы шлагбаума) с
     фотоэлемента приходит сигнал на сенсор. Контроллер, имея сигнал с ф/э безопасности
     на сенсор, переходит в режим "автомобиль в воротах" - пока проезд не освобождён стрела шлагбаума
     не должна закрыться.

     [TODO:pyub] - Правильно ли я понимаю, что мы в этот момент должны включить красный
     сигнал светофора?

     #+NAME: define_events
     #+BEGIN_SRC lisp
       (define-event car-in-gate (:goon controller)
          (trans controller :goon :ingate))
     #+END_SRC

     Машина проезжает шлагбаум, с сенсорного устройства за его стрелой (контроллер
     петли индуктивности, фотоэлемент, датчик МП) на контроллер отправляется
     сигнал. Контроллер получает подтверждение завершения проезда и начинает
     соответствующую процедуру.

     #+NAME: define_events
     #+BEGIN_SRC lisp
       (define-event car-out-of-gate (:ingate controller)
          (trans controller :ingate :fin))
     #+END_SRC

**** TODO Процедура завершения проезда (=fin=)

     Мы считаем, что машина покинула ворота (место проезда) тогда, когда:
     - фотоэлемент не регистрирует машину под шлагбаумом
     - от сенсора за шлагбаумом пришел сигнал, что машина за шлагбаумом

     Все это вместе вызовет событие =car-out-of-gate=. Получив это событие, мы перейдем
     в состояние =fin= и контроллер сделает следующие действия:

     - размыкает реле, отвечающее за зелёный свет на светофоре;
     - замыкает реле, отвечающее за красный свет на светофоре;
     - замыкает реле, отвечающее за закрытие шлагбаума за стойкой (реле замкнуто либо
       до прихода на сенсорный ввод сигнала "закрыт" с концевика, либо по длине
       импульса из настроек контроллера)
     - сообщает серверу "проезд по билету № успешно завершен", а также об изменении
       количества мест в секторе и данные по билету
     - отправляет на табло счётчика мест по RS-485 сообщение "-1 место"

     #+NAME: define_events
     #+BEGIN_SRC lisp
       TODO
     #+END_SRC

***** Получив сигнал с концевика закрытия на сенсор контроллер:
      - размыкает реле, отвечающее за красный свет на светофоре;
      - замыкает реле, отвечающее за зелёный свет на светофоре;
      - возвращает стойку в режим ожидания =standby=.
**** TODO Cостояние блокировки (=lock=)

     Состояние, в которое переходит стойка в случае некорректной работы
     критичного для функционирования системы (или подсистемы) опросного [[*%3D%25type%25%20%D0%BF%D0%B5%D1%80%D0%B5%D1%84%D0%B5%D1%80%D0%B8%D0%B9%D0%BD%D1%8B%D0%B5%20%D1%83%D1%81%D1%82%D1%80%D0%BE%D0%B9%D1%81%D1%82%D0%B2%D0%B0%3D][переферийного устройства]].
     Для стоек, на которых нет торгового оборудования (т.е.работы с деньгами) блокировка должна быть частичной. Например, если заканчивается бумага в
     термопринтере, выводится сообщение о том, что "Печать билета невозможна,
     обратитесь к персоналу парковки", но при этом въезд по пластиковым билетам
     (картам) для постоянных клиентов по врежнему возможен.
     В случае возникновения ситуации блокировки стойка регулярно отправляеет на сервер
     сервисное сообщение о том, что она работает в нештатном режиме и требуется
     произвести змену бумаги / ремонт устрйоства.

*** TODO Алгоритм простого выезда по чеку

    Простейший алгоритм для парковки, работающей по чекам с стандартным комплектом
    датчиков и контроля проезда. В алгоритм введены светофор и счётчик мест
    (светодиодное табло).

    1. =Подъезд машины=
    1.1. Машина подъезжает к стойке, с сенсорного устройства у стойки (контроллер петли
    индуктивность, фотоэлемент и т.п.) на контроллер отправляется сигнал.
    1.2. Контроллер получает сигнал о том, что у стойки находится машина и из режима
    ожидания переховодит стойку в активный режим.  1.3. Замыкается реле, отвечающее за
    красный сигнал на светофоре.  1.4. На сервер отправляет инфосообщение "Машина у
    стойки выезда".
    2. =Активный режим (диалог с пользователем)=
    2.1. Контроллер переводит периферийные устройства в режим обслуживания клиента:
    - активируется широкополосный сканер штрих-кода;
    - на дисплей выдаётся информационное сообщение "Поднесите билет".
    2.2. Клиент подносит билет штрих-кодом к сканеру, данные по RS232 или USB передаются на контроллер.
    2.3. Контроллер  расшифровывает с помощью ключа шифрования (аналогичный стоит на въезде и кассах) штрих-код, получая из него информацию об оставшемся бесплатном времени (со времени въезда или времени оплаты). Он решает, исходя из заложенных в себя тарифов и параметров времени, разрешёен въезд или требуется оплата времени. см. "ПРОВЕРКА РАЗРЕШЕНИЯ ВЫЕЗДА"
    2.4. Исходя из результатов проверки контроллер выводит на дислпей сообщение "Выезд разрешён" или "Выезд запрещён, оплатите $$$ руб".
    2.5. Если выезд запрещён, контроллер блокирет перифирию до
         окончания процедуры завершения проезда (=fin=), защищая систему от повторного прикладывания чека.
    2.6. Контроллер сообщает на сервер "Выезд по билету №".
    3. =Инициация проезда=
    3.1. Контроллер получает положительный ответ от внутренних и внешних механизмов проверки оплаты билета и инициирует процедуру проезда.
    3.2. Контроллер  замыкает реле, отвечающее за открытие шлагбаума  за стойкой (реле замкнуто либо до прихода на сенсорный ввод сигнала "открыт", либо по длине импульса из настроек контроллера)
    3.3. Контроллер сообщает серверу "Открытие шлагбаума стойки №"
    4. =Процедура проезда=
    4.1. Когда стрела шлагбаума открывается, в шлагбауме срабатывает концевик открытия - сигнал с него приходит на сенсор "открытие" контроллера
    4.2. Контроллер фиксирует факт того, что шлагбаум в открытом положении совершаются следующие действия:
         - замыкает реле, отвечающее за зелёный свет на светофоре;
         - размыкает реле, отвечающее за красный свет на светофоре;
         - сообщает серверу "Шлагбаум стойки № открыт"
    4.3. Когда машина пересекает линию фотоэлемента безопасности (стрелы шлагбаума) с ф/э приходит сигнал на сэнсор.
    4.4. Контроллер, имея сигнал с ф/э безопасности на сенсор, переходит в режим "стоп" - пока сенсор не освобождён стрела шлагбаума не должна закрыться.
    4.5. Машина проезжает шлагбаум,  с сенсорного устройства за его стрелой (контроллер петли индуктивности, фотоэлемент, датчик МП) на контроллер отправляется сигнал.
    4.6. Контроллер получает подтверждение завершения проезда и начинает соответсвующую процедуру.
    5. =Процедура завершения проезда=
    5.1. Получив подтверждение окончания проезда - нет сигнала на сенсор безопасности проезда и на сенсор петли за шлагбаумом - контроллер инициирует следующеи действия:
         - размыкает реле, отвечающее за зелёный свет на светофоре;
         - замыкает реле, отвечающее за красный свет на светофоре;
         - замыкает реле, отвечающее за закрытие шлагбаума за стойкой (реле замкнуто либо до прихода на сенсорный ввод сигнала "закрыт" с концевика, либо по длине импульса из настроек контроллера)
         - сообщает серверу "выезд по билету № успешно завершен", а также об изменении количества мест в секторе и данные по билету
         - отправляет на табло счётчика мест по RS-485 сообщение "-1 место"
    5.2. Получив сигнал с концевика закрытия на сенсор контроллер:
         - размыкает реле, отвечающее за красный свет на светофоре;
         - замыкает реле, отвечающее за зелёный свет на светофоре;
         - возвращает стойку в режим ожидания;
         - сообщает на сервер о закрытии шлагбаума.

*** TODO Алгоритм проезда по карте СКУД

    Карты СКУД формата Em-Marine могут использоваться параллельно с билетами или картами
    Mifare (основным въездным документом). Они вносятся в базу данных администратором
    парковки и имеют ряд опций и статусов о которых подробнее будет написано в описании
    модуля СКУД. Если пользователь вместо нажатия кнопки выдачи въездного документа
    прикладывает карту СКУД и она проходит успешно проверки - это действие является
    инициирующим проезд.

    2.1. Контроллер переводит периферийные устройства в режим обслуживания клиента:
    - включается подсветка кнопки печати билета;
    - на дисплей выдаётся информационное сообщение "Нажмите кнопку и получите билет ИЛИ ПРИЛОЖИТЕ КАРТУ".
    2.2. Клиент прикладывает карту к считывателю карт. Сигнал со считывателя Em-Marine приходит на интерфейс Wiegand 26.
    2.3. Контроллер получает сигнал о том, что приложена карат имеющая номер NNNNNNNN.
    2.4. Контроллер отправляет запрос на проверку статуса карты на сервер. Сервер обрабатывает запрос и возвращает контроллеру информацию о статусе карты:
         - "есть в БД" / "нет в БД" ;
         - "на парковке" / "вне парковки";
         - "заблокирована" / "активна";
         - "есть места для данной группы" / "нет мест для данной группы".
    2.5. Контроллер получает ответ от сервера и на его основании решает - пускать ли владельца карты на парковку или нет.
    2.6. Если сигнала связи с сервером нет, то контроллер проверяет
    свою БД и опрашивает другие контроллеры, которые видит в
    сети. Решение принимается на базе самой новой из доступных записей
    о статусе карты. Тут у нас была мысль поддерживать такую же логику
    работы, которой руководствуется гит при слиянии коммитов.
    2.8. Если въезд разрешён, контроллер инициирует процедуру проезда.
    2.9. На сервер отправляет инфосообщение "Приложена карта NNNNNNNN, выезд разрешен".

** TODO Алгоритмы работы с автоматической  кассой
*** TODO Работа с автоматической кассой

    АЛГОРИТМЫ СКОПИРОВАНЫ ИЗ ПАСПОРТА КАССЫ, В ПРОЦЕССЕ ДОРАБОТКИ

*** TODO Процедура оплаты

    Это последовательность действий посетителя и оператора парковки
    при проведении оплаты через автоматическую кассу.

    1. Посетитель находится у кассы.
    1.1. Подносит неоплаченный въездной билет или просроченный выездной чек к сканеру штрих-кода.
    1.2. Если посетитель потерял въездной билет или выездной чек, то он должен нажать кнопку "Оплата за утерю билета" (точная формулировка может отличаться).
    2. На дисплее выводится информация о необходимых операциях.
    2.1. В случае, если бесплатное или ранее оплаченное время ещё не истекло, на дисплей будет выведена информация об оставшемся времени нахождения на парковке.
    2.2. Если посетитель пробыл на парковке больше установленного бесплатного времени и не провёл оплату на другой кассе или производит оплату за утерю билета, система рассчитает сумму, требуемую к оплате, исходя из установленных для стойки тарифов, выведет на дисплей информацию о необходимости и размере платежа и активирует платёжное оборудование.
    3. Посетитель оплачивает услуги АПС наличными через купюроприемник (банкноты номиналом 50, 100, 500, 1000 и 5000 руб.; мод. К, БК, КМ, БКМ), монетоприёмник (монеты номиналом 1, 2, 5 и 10 руб., мод. М, КМ, БМ, БКМ) или банковской карточкой (мод. Б, БК, БМ, БКМ).
    3.1. Если оплата производится купюрами или монетами, и при внесении платежа была совершена ошибка, возможно вернуть деньги нажав кнопку "Возврат денег".
    3.2. Если оплата производится монетами, и при внесении платежа монету заклинило в монетоприёмнике, необходимо нажать на кнопку "Сброс монеты" под прорезью для монет.
    3.3. Если оплата производится с помощью банковской карты, то для активации POS-терминала необходимо нажать кнопку "Оплата картой".
    4. После оплаты касса выдаёт выездной чек и, в случае, если посетитель оплатил наличными и сумма вносимых средств превысила требуемую, сдачу. При этом на мониторе отображается оставшееся время, в соответствии с установленными тарифами, в течение которого посетитель должен покинуть парковку.

*** TODO Процедура инкассации

    2. Запросить "Х-отчет" и забрать чек. п. 3 и п. 4 только для модификаций с купюрами (К, БК, КМ, БКМ)
    3. Изъять банкнотную наличность.
    3.1. Снять бокс купюроприёмника
    3.2. Изъять купюры из бокса или взять пустой бокс купюроприёмника
    3.3. Установить пустой бокс купюроприемника на место.
    4. Восполнить банкнотную наличность для сдачи.
    4.1. Снять кассеты диспенсера с купюрами сдачи и кассету "Отказ".
    4.2. Заполнить кассеты купюрами или взять предварительно заполненные сдачей новые кассеты. Изъять неликвидные купюры из кассеты "Отказ".
    4.3. Установить кассеты на место.
    5. Провести инкассацию и закрыть смену.
    5.1. Нажать кнопку "Инкассация" и забрать чек с данными об инкассации. п. 6 и п. 7 только для модификаций с монетами (М, КМ, БМ, БКМ)
    6. Изъять полученные монеты из специального металлического ящика.
    7. После нажатия "Инкассации" выполнить перезагрузку сдачи в хопперы.
    7.1. Хопперы автоматически поочерёдно осуществят сброс всех не
         выданных в качестве сдачи монет в окно выдачи сдачи или в
         предварительно размещённую под желобами для монет ёмкость.
    7.2. Загрузите в хопперы сдачу в соответствии с установленным по умолчанию количеством сдачи. п. 8 только для модификаций с банковскими картами (Б, БК, БМ, БКМ)
    8. После нажатия "Инкассации" POS-терминал обменивается данными с банком, после чего в чек инкассации включается отчёт об эквайринговых операциях.
    9. Если на дисплее отображается надпись "Заблокировано", необходимо нажать кнопку "Разблокировка", после чего будет напечатан тестовый чек и выведена надпись "Поднесите штрих-код или карту".
    10. Закрыть дверь кассы.

*** TODO Процедура закрытия смены

    [TODO:Rigidus] - Почитать про кассовый регламент, что такое Z-отчет

    2. Запросить "Z-отчет", закрыть фискальную смену и забрать чек. Сверить суммы прибыли с чеками инкассаций и фактической прибылью.
    3. Новая смена открывается автоматически при следующей оплате.
    4. Если на дисплее отображается надпись "Заблокировано", необходимо нажать кнопку "Разблокировка", после чего будет напечатан тестовый чек и выведена надпись "Поднесите штрих-код или карту".
    5. Закрыть кассу.

* Этапы, сроки, задачи

Список теекущих задач. По факту завершения задачи обязательно закрывать её в статус DONE,
писать сопроводительную записку и переносить весь подраздел задачи с описанием в
соотвестующий данной задаче раздел документации.

** TODO Этапы и сроки
*** Пилотный функционал (до 1 марта 2016)
**** Рабочий вьезд/выезд по билетам
**** Минимальный функционал сервера со СКУДом на Эл-марине
**** Ручная касса на базе ПК
**** Логгирование на сервере
**** Все контроллеры должны уметь звук на SIP-е
*** Функционал "второго" этапа
**** Автоматизированная касса (до 1 апреля 2016)
**** Гибкие системы тарификации
**** Паркомат
**** Билинг паркомата
**** Аггрегирующий сервер
**** Премиум (ресайклеры, выдача карт, свистоперделки)
**** Распознавание номеров
**** Интеграции с API
**** Аггрегация в

** Задачи общщего характера
*** START [pyub] Описание алгоритмов взаимодействия постетителя и АСПП
*** WAIT [ranma] Отладка и интеграционное тестирование
*** WAIT [all] Проверка элементов системы на макете прототипа

** Задачи hardware
*** DONE [bda]Выбор микрокомпьютера для контроллера

*** DONE [pyub] Покупка плат BeagleBone Black и Development Kit
*** DONE [bda] Подбор редких комплектующих для платы расширения
    Сформирован список: https://octopart.com/bom-lookup/g1agjT7N/75pqkJDrUqGv7qrq
*** TODO [bda] Подбор основной части комплектующих для платы расширения
*** TODO [noa] Поиск и заказ комплектующих

    Необходимо по спискам из задач подбора комплектующих найти поставщиков в России
    через данный ресурс: http://passport.efind.ru/org/
    Далее, сделать заказ по списку.
*** START Трассировка базовой платы
*** START Трассировка платы расширения расширения
*** TODO [unrimah] RTC needed (battery etc.)
*** WAIT [unrimah] Макетирование прототипа

** Задачи software контроллер

   Описание конечно-автоматной работы системы и ее верификации.

*** TODO [pyub] Описать =happy-cases=
**** DONE На алгоритмы проезда
**** TODO На алгоритмы оплаты
**** TODO Совмещенные алгоритмы
*** TODO [rigidus] Составление исполняемой спецификации, внесение описаний работы и кейсов
*** DONE [pyub] Выделить состояния контроллера (стоек)
*** TODO [pyub] Список событий контроллера (стоек)
*** TODO [rigidus] Составить конечный автомат
*** START [rigidus] Декларативное описание конечных автоматов
*** START [rigidus] Написание генератора кода модели системы
*** START [rigidus] Ручная верификация работы системы на модели
*** START [rigidus] Расширение модели рабочим кодом

*** START [rigidus] Автоматическая верификация работы системы
*** START [rigidus] Тестирование рабочего кода на прототипе устройства

** Задачи переферия контроллера
*** TODO [pyub] Создание списка переферии и сведение документации по ней

** Задачи сервер
*** WAIT Разработка структуры БД
*** WAIT Разработка софтверной части для сервера
*** WAIT Разработка интерйефса сервера

* WAIT Протоколы обмена данными

  [TODO:pyub] Особенно важный ГЛОБАЛЬНЫЙ кейс - общение стоек между собой
  отсутствия связи - надеюсь мы не будем поднимать это пока не сдадим пилотный
  проект.

  Контроллеры и рабочие станции соединяются с центральным сервером по локальной сети,
  используя стек протоколов TCP/IP.

  Некоторые периферийные компоненты системы могут связываться с контроллерами или
  непосредственно с сервером и рабочими станциями по интерфейсу RS-485

  Между стойками сети реализуем GIT [TODO:rigidus]

** Принцип построения сети и взаимодействрия контроллеров и сервера

   Часть функций система должна выполнять, когда устройства (контроллер и сервер)
   работают в автономном режиме (например при обрыве связи по Ethernet).

   Изначально закладывается одноранговая структура автоматического взаимодействия
   сервера и контроллера. Т.е. сервер и все контроллеры в сети постоянно обмениваются
   функциональными сервисными сообщениями, синхронизируя свои данные о происходящем на
   парковке. Сервер является аггрегатором функциональных и информационных сообщений
   (истории лога), а также имеет приоритет настройки и управления элементами системы
   (например тарифы установленные на сервере приоритетны для контроллеров, если на них
   не выставлена обратная настройка) во всех случаях, кроме связанных с безопасностью
   (например, если с сервера пришёл сигнал "закрыть шлагбаум", а стойка считает, что
   датчик безопасности закрытия стрелы шлагбаума занят - шлагбаум не закрывается).

   Таким образом возможны три сценария сбоя:
   - одна или несколько стоек теряют связь с одной или несколькими стойками и сервером (две автономные группы)
   - все стойки теряют свзяь с сервером (две автономные группы)
   - несколько групп, состоящих из одной или нескольких стоек, теряют связь друг сдругом и / или сервером (более двух автономных групп).

** Принцип автономной работы контроллера

   Работа контроллера в случае обрыва связи с сервером осуществляется следующим
   образом. Билет считывается сканером штрих кодов. Время и код билета сохраняются в
   памяти контроллера. Решение об открытии ворот принимается охранником (на билете
   напечатано время въезда). При восстановлении связи архив информации о билетах
   передается на центральный сервер.

   Когда и если контроллер остаётся без связи со всей остальной системой он должен
   максимально полноценно выполнять заложенные в него функции автоматизации:
   - Для въезда, выезда, проезда и совмещённых с оплатой решений:
     - открывать и закрывать шлагбаум, контролировать состояние шлг.
     - управлять сигнальными устройствами (светофорами, счётчиками мест)
     - контролировать состояние датчиков присутсвия и безопасности
   - Для въездов
     - для штрих-кода: шифровать в код информацию о въезде / для Mifare: записывать информацию о въезде на карту
   - Для выездов, касс, проездных стоек:
     - выдавать выездной документ разовым посетителям
     - иметь инфомацию о тарифах (исходя из сложной системы тарификации)
     - считывать информацию с въездного документа и обрабатывать её

* Контроллер
** Гибкость и оптимизация

   Плата и программное обеспечение должны быть выполнены так, чтобы была возможность
   масштабирования системы и при этом сохранения обратной совместимости программного
   обеспечения. Например, в определённый момент возникнет необходимость увеличить
   количество реле или COM-портов на плате, будет осуществлена доработка связанная с
   переразводкой, но при этом на новых контроллерах должно штатно работать и старое ПО,
   а на старых контроллерах работать новое ПО.

** Аппаратная часть
*** DONE Выбор микрокомпьютера
http://beagleboard.org/support/bone101

Уменьшить размер ПЗУ с 4х ГБ.
Выкинуть microHDMI.
Выкинуть miniUSB (slave), переразвести на UART, отказаться от доп. питания. Сервисный UART
нужен.
Выкинуть "настоящий" USB-host разъем => развести на доп. ноги => переразвести на шину
-> до USB-hub. Удлинить гребенку контактов.

**** TODO Оптимизация цены решения
**** TODO Подготовка для заказа на контрактной сборке
*** TODO Принципиальная схема контроллера
*** WAIT Схемотехника базовой платы
*** WAIT Схемотехника плат расширения

** Периферийное оборудование
*** Дисплей монохромный
   монохромный 2,4строки
*** Дисплей цветной сенсорный
*** Клавиатура
*** Термопринтеры
*** ККМ
*** Сканеры штриховых кодов
*** Приёмники купюр
*** Диспнесеры купюр
*** Приёмник монет
*** Хоппер (диспенсер монет)
*** Ресайклер купюр
*** Ресайклер монет
*** Считыватели карт EM-Marine, Mifare
*** Приёмник карт
*** Диспенсер карт
*** Ресайклер карт
*** Терминал банковских карт

** Подключение периферии к контроллеру
*** Таблица подключения переферийных устрйоств
*** Периферийные устройства контроллера и протоколы связи

    Документация по всему периферийному оборудованию лежит тут: [[file://home/pyub/repo/asp/devices][devices]]

    #+CAPTION: Периферийное оборудовани
     |    | Тип устройства                       | Предлагаемая модель                | Интерфейс подключения   |
     |----+--------------------------------------+------------------------------------+-------------------------|
     |  1 | Термопринтер                         | Custom VKP80II                     | RS-232 / USB            |
     |  2 | Фискальный регистратор               | Искра ПРИМ-21К 03                  | RS-232 / USB            |
     |  3 | Сканер штрихкодов широкополосный     | Honywell IS3480 QuantumE           | RS-232 / USB            |
     |  4 | Сканер штрихкода / QR-кода           | не выбрана                         | RS-232 / USB            |
     |  5 | Диспенсер карт Mifare+               | не выбрана                         | RS-232 / USB            |
     |  6 | Картоприёмник Mifare+                | не выбрана                         | RS-232 / USB            |
     |  7 | Считыватель карт Em-Marine           | Iron Logic Mifare + Matrix II MF-I | Wiegand 26              |
     |  8 | Считыватель карт Em-Marine           | Iron Logic Matrix V / Matrix II EH | Wiegand 26              |
     |  9 | Дисплей монохромный символьный 16*4  | Winstar / Long                     | 6800 / SPI              |
     | 10 | Дисплей цветной графический TFT-LCD  | Winstar / Long                     | RGB / MCU               |
     | 11 | Купюроприемник                       | CashCode SM (MSM)                  | ID003 / CCNET           |
     |    |                                      | ICT L77F                           | RS-232                  |
     | 12 | Монетоприемник                       | ICT UCA2                           | RS-232                  |
     | 13 | Диспенсер купюр                      | Puloon LCDM-1000/2000/4000         | RS-232                  |
     |    |                                      | ICT ND 300 KM                      | RS-232                  |
     | 14 | Хоппер                               | ICT Leonid Mini Hopper             | ccTalk / Hopper         |
     | 15 | Ресайклер монет                      | не выбрана                         | RS-232                  |
     | 16 | POS банк-терминал                    | не выбрана                         | RS-232 / USB / Ethernet |
     | 17 | Табло счётчика мест / инфотабло      | не выбрана                         | RS-485                  |
     | 18 | Ультразвуковой датчик наличия машины | не выбрана                         | RS-485                  |
     | 19 | Магнитный датчик наличия машины      | не выбрана                         | RS-485                  |

*** Выводы на аудио оборудование

    Делаем в пилотнике. Поднимаем Астерикс

    #+CAPTION: Аудио-оборудование
     |    | Тип устройства    | Предлагаемая модель | Интерфейс подключения |
     |----+-------------------+---------------------+-----------------------|
     | 20 | Вывод на динамик  | Jack 3,5 мм TS      |                       |
     | 21 | Вывод на микрофон | Jack 3,5 мм TS      |                       |

*** Выводы на сухой контакт реле

    Это реле.

    #+CAPTION: Выходы - сухой контакт
     |    | Тип устройства                      | Предлагаемая модель | Интерфейс подключения |
     |----+-------------------------------------+---------------------+-----------------------|
     | 22 | Шлагбаум вверх                      | R1                  |                       |
     | 23 | Шлагбаум вниз                       | R2                  |                       |
     | 24 | Шлагбаум стоп                       | R3                  |                       |
     | 25 | Светофор сигнал 1                   | R4                  |                       |
     | 26 | Светофор сигнал 2                   | R5                  |                       |
     | 27 | Светофор сигнал 3                   | R6                  |                       |
     | 28 | Арбитраж вывод                      | R7                  |                       |
     | 29 | Доп. реле управления смежными устр. | R8                  |                       |
     | 30 | Доп. реле управления смежными устр. | R9                  |                       |
     | 31 | Доп. реле управления смежными устр. | R10                 |                       |

*** Выводы на сенсоры и кнопки

    #+CAPTION: Это вводы
     |    | Тип устройства                  | Предлагаемая модель | Интерфейс подключения |
     |----+---------------------------------+---------------------+-----------------------|
     | 32 | Датчик присутсвия автомобиля А  | S1                  |                       |
     | 33 | Датчик присутсвия автомобиля Б  | S2                  |                       |
     | 34 | Датчик завершения проезда рампы | S3                  |                       |
     | 35 | Арбитраж ввод                   | S4                  |                       |
     | 36 | Концевки открытия шлагбаума     | S5                  |                       |
     | 37 | Концевик закрытия шлагбаума     | S6                  |                       |
     | 38 | Фотоэлемент безопасности        | S7                  |                       |
     | 39 | Датчик грузового транспорта     | S8                  |                       |
     | 40 | Универсальная кнопка 1          | S9                  |                       |
     | 41 | Универсальная кнопка 2          | S10                 |                       |
     | 42 | Универсальная кнопка 3          | S11                 |                       |
     | 43 | Универсальная кнопка 4          | S12                 |                       |
     | 44 | Универсальная кнопка 5          | S13                 |                       |
     | 45 | Универсальная кнопка 6          | S14                 |                       |
     | 46 | Общий                           | S15                 |                       |

*** Оценка максимального кол-ва подключений устрйоств

   Максимальная комплектация, оплата совмещённая с выездной стойкой в вариантах на
   чеках и картах.

   #+CAPTION:Переферийное оборудование
     |    | Тип устройства                                           | Предлагаемая модель                    | Интерфейс подключения    |
     |----+----------------------------------------------------------+----------------------------------------+--------------------------|
     |  1 | Фискальный регистратор / Термопринтер                    | Искра ПРИМ-21К 03 / Custom VKP80II     | RS-232                   |
     |  2 | Сканер штрихкодов широкополосный / Приёмник карт Mifare+ | Honywell IS3480 QuantumE / не выбирали | RS-232                   |
     |  3 | Диспенсер карт Mifare+ / Ресайклер карт Mifare+          |                                        | RS-232                   |
     |  4 | Считыватель карт Em-Marine / Mifare                      | Iron Logic Matrix V / Matrix II EH     | Wiegand 26               |
     |  5 | Дисплей монохромный символьный 16*4                      | Winstar / Long                         | 6800 / SPI / I2C         |
     |  6 | Дисплей цветной графический TFT-LCD                      | Winstar / Long                         | RGB / MCU                |
     |  7 | Купюроприемник / Ресайклер купюр                         | CashCode SM (MSM)                      | ID003 / CCNET cmpt.RS232 |
     |  8 | Монетоприемник / Ресайклер монет                         | ICT UCA2                               | RS-232                   |
     |  9 | Диспенсер купюр                                          | Puloon LCDM-1000/2000/4000             | RS-232                   |
     | 10 | Хоппер                                                   | ICT Leonid Mini Hopper                 | ccTalk cmpt.RS232        |
     | 11 | POS банк-терминал                                        | не выбрана                             | USB / Ethernet           |
     | 12 | Вввод RS-485                                             | не выбрана                             | RS-485                   |
     | 13 | Вывод RS-485                                             | не выбрана                             | RS-485                   |
     | 14 | GSM промышленный                                         | не выбрана                             | GPRS RS-232              |

   #+CAPTION:Базовая плата
     |    | Интерфесы              | Подключаемое оборудование |   |
     |----+------------------------+---------------------------+---|
     |  1 | Основные GPIO (o)      | Шлагбаум (3)              |   |
     |    |                        | Светофор (3)              |   |
     |    |                        | Доп. реле (3) ???         |   |
     |  2 | Основные GPIO (i)      | Токовые петли (3)         |   |
     |    |                        | Конц. шлагбаума (2)       |   |
     |    |                        | Фотоэл. безоп. (1)        |   |
     |    |                        | Датчик грузового (1)      |   |
     |  3 | Основные GPIO (i/o)    | Арбитраж (1)              |   |
     |  4 | I2C GPIO               | Универсальные кнопки (8)  |   |
     |  5 | I2C + 1 GPIO@I2C       | Малый дисплей             |   |
     |  6 | [TODO:unrimah] ???     | Большой дисплей           |   |
     |  7 | I2C-GPIO-Wiegand26     | Считыватель карт MF/EH    |   |
     |  8 | I2C-RS232 not isolated | Принтер/Фиск. регистратор |   |
     |  9 | +1  RS232 not isolated | сканер ШК/приемник MF+    |   |
     | 10 | I2C-RS485 isolated     | Табло своб. мест          |   |
     | 11 | +1  RS485 isolated     | not used in base          |   |
     | 12 | I2C+I2S                | Аудио                     |   |
     |    |                        |                           |   |

   #+CAPTION:Плата расширения
     |   | Интерфейсы            | Подключяемое оборудование                       |                                         |
     |---+-----------------------+-------------------------------------------------+-----------------------------------------|
     | 1 | I2C-RS232             | Диспенсер карт Mifare+ / Ресайклер карт Mifare+ |                                         |
     |   | I2C-RS232-ID003/ccNET | Купюроприемник / Ресайклер купюр                |                                         |
     | 2 | I2C-RS232             | Монетоприемник / Ресайклер монет                |                                         |
     |   | I2C-RS232             | Диспенсер купюр                                 |                                         |
     | 3 | I2C-RS232-ccTALK      | Хоппер                                          |                                         |
     |   | I2C-RS232             | Industrial Cell Network Modem                   |                                         |
     | 4 | USB                   | POS банковский терминал                         | Есть вопрос, подключать ли прямо в ВВВ  |
     |   |                       |                                                 | или городить отдельный хаб на extBoard, |
     |   |                       |                                                 | можно это оставить на переразводку      |
     |   |                       |                                                 | home edition                            |

*** Стандартные комплекты периферийных устройств
**** Въездная / выездная стойка с выдачей бумажного билета, СКУД и IP-связью

    [TODO:unrimah] Привести таблицу в понятный тебе вид.

    Также подключены светофор и табло со счётчиком мест.

    #+CAPTION:Переферийное оборудование
     |    | Тип устройства                        | Предлагаемая модель                       | Интерфейс подключения | Важность для работы сиситемы и функционал                                                                                                           |
     |----+---------------------------------------+-------------------------------------------+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
     |  1 | Термопринтер / Сканер штрих-кода      | Custom VKP80II / Honywell IS3480 QuantumE | RS-232                | Опросное и критичное - при выходе из строя или определённых сигналов с датчиков блокировка проезда по чекам                                         |
     |  2 | Считыватель карт Em-Marine / Mifare   | Iron Logic Matrix V / Matrix II EH        | Wiegand 26            | Опциональное (возможно ли сделать опросным?) - при неиспр. блок. СКУД                                                                               |
     |  3 | Дисплей монохромный символьный 16*4   | Winstar / Long / МЭЛТ                     | I2C                   | Опциональное                                                                                                                                        |
     |  4 | Таблое свеетодиодное, счетчик мест    | не выбрана                                | RS-485 IN             | Опциональное                                                                                                                                        |
     |----+---------------------------------------+-------------------------------------------+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
     |  5 | Вывод на динамик                      | Jack 3,5 мм TS                            |                       | Опциональное                                                                                                                                        |
     |  6 | Вывод на микрофон                     | Jack 3,5 мм TS                            |                       | Опциональное                                                                                                                                        |
     |----+---------------------------------------+-------------------------------------------+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
     |  7 | Шлагбаум вверх                        | R1                                        |                       | По замыканию реле подаётся напряжение на плату управления шлагбаума, стрела поднимается                                                             |
     |  8 | Шлагбаум вниз                         | R2                                        |                       | По замыканию реле подаётся напряжение на плату управления шлагбаума, стрела опускается                                                              |
     |  9 | Шлагбаум стоп                         | R3                                        |                       | По замыканию реле подаётся напряжение на плату управления шлагбаума, движение стрелы принудительно останавливается                                  |
     | 10 | Светофор сигнал 1                     | R4                                        |                       | По замыканию реле ток идёт на группу диодов светофора зелёного цвета                                                                                |
     | 11 | Светофор сигнал 2                     | R5                                        |                       | По замыканию реле ток идёт на группу диодов светофора красного цвета                                                                                |
     |----+---------------------------------------+-------------------------------------------+-----------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------|
     | 12 | Датчик присутсвия автомобиля А        | S1                                        |                       | В случае отсутсвия сигнала - система не работает корректно, отключаемо оператором                                                                   |
     | 13 | Датчик присутсвия автомобиля Б        | S2                                        |                       | В случае отсутсвия сигнала - система не работает корректно, отключаемо оператором                                                                   |
     | 14 | Концевки открытия шлагбаума           | S5                                        |                       | Если есть сигнал - система думает, что шлг. открыт                                                                                                  |
     | 15 | Концевик закрытия шлагбаума           | S6                                        |                       | Если есть сигнал - система думает, что шлг. закрыт                                                                                                  |
     | 16 | Фотоэлемент безопасности              | S7                                        |                       | Если есть сигнал - система думает, что на линии ф/э ннчего нет, если нет - сигнал на реле шлагбаум стоп                                             |
     | 17 | Кнопка 1 - Печать билета              | S9                                        |                       | Отправка команды на принтер на печать билета и срабатывание арбитража, если надо                                                                    |
     | 18 | Кнопка 2 - Вызов оператора (IP-связь) | S10                                       |                       | Вызов по IP-связи на установленный в настройкха стойки терминал связи                                                                               |
     | 19 | Кнопка 3 - Разблокировка              | S11                                       |                       | Вывод стойки из состояния блокировки, в которое она может войти в случе неиспрвности критичного устрйоства                                          |
     | 20 | Кнопка 4 - Завпрос открытия шлг.      | S12                                       |                       | Отправка команды на открытие шлагбаума (опционально в настройках - либо всегда, либо только при наличии машины, либо только в состоянии блокировки) |
     | 21 | Общий                                 | S15                                       |                       |                                                                                                                                                     |

*** Максимальная комплектация, оплата совмещённая с выездной стойкой в вариантах на чеках и картах.

    #+CAPTION:Переферийное оборудование
     |    | Тип устройства                                           | Предлагаемая модель                    | Интерфейс подключения    |
     |----+----------------------------------------------------------+----------------------------------------+--------------------------|
     |  1 | Фискальный регистратор / Термопринтер                    | Искра ПРИМ-21К 03 / Custom VKP80II     | RS-232                   |
     |  2 | Сканер штрихкодов широкополосный / Приёмник карт Mifare+ | Honywell IS3480 QuantumE / не выбирали | RS-232                   |
     |  3 | Диспенсер карт Mifare+ / Ресайклер карт Mifare+          |                                        | RS-232                   |
     |  4 | Считыватель карт Em-Marine / Mifare                      | Iron Logic Matrix V / Matrix II EH     | Wiegand 26               |
     |  5 | Дисплей монохромный символьный 16*4                      | Winstar / Long                         | 6800 / SPI / I2C         |
     |  6 | Дисплей цветной графический TFT-LCD                      | Winstar / Long                         | RGB / MCU                |
     |  7 | Купюроприемник / Ресайклер купюр                         | CashCode SM (MSM)                      | ID003 / CCNET cmpt.RS232 |
     |  8 | Монетоприемник / Ресайклер монет                         | ICT UCA2                               | RS-232                   |
     |  9 | Диспенсер купюр                                          | Puloon LCDM-1000/2000/4000             | RS-232                   |
     | 10 | Хоппер                                                   | ICT Leonid Mini Hopper                 | ccTalk cmpt.RS232        |
     | 11 | POS банк-терминал                                        | не выбрана                             | USB / Ethernet           |
     | 12 | Вввод RS-485                                             | не выбрана                             | RS-485                   |
     | 13 | Вывод RS-485                                             | не выбрана                             | RS-485                   |
     | 14 | GSM промышленный                                         | не выбрана                             | GPRS RS-232              |

** Программная платформа
*** TODO Структура работы с памятью
*** TODO Операционная система
*** TODO Протоколы периферии
*** WAIT  Драйвера переферии
*** WAIT Adapter OS - Posix
*** WAIT  Web-интерфейс для настройки контроллера

   Микроконтроллер должен иметь собственный Web-сервер для возможности доступа к его
   настройкам через локальную сеть по IP адресу и наличия функции перепрошивки и
   обновления программного обеспечения контроллера без физического доступа к нему.

** TODO Первичный запуск контроллера
*** DONE Подключение к BBB по ssh

   Для начала работы с ВВВ нужен только кабель miniUSB - по нему плата и питается, и
   коммуницирует. Драйвера скачиваются с
   http://beagleboard.org/static/Drivers/Windows/BONE_D64.exe, после установки -
   подключаем плату к USB. В устройствах появляются Serial port (у меня СОМ3) и новое
   сетевое подключение (Linux USB Ethernet/RNDIS Gadget). Для доступа потребуется
   PuTTY, либо другая утилита консольного доступа.

   Для доступа через СОМ-порт: устанавливаем соединение через PuTTY, выбрав нужный СОМ,
   выставив скорость 115200, опционально - отключив flow control. Попадаем в консоль,
   вводим в качестве логина "root" (без кавычек), пароля не требуется. Вуаля, мы в
   консоли.

   Для доступа по ssh: конфигурируем сетевое подключение, вводим статический адрес
   192.168.7.1, маска 255.255.255.0. Теперь мы можем постучаться в ВВВ по ssh, по
   адресу 192.168.7.2 (login=root), либо открыть в браузере страничку
   http://192.168.7.2, где крутится справочная страничка на apache2.

   Для доступа через общий роутер: нужен патч-корд и роутер, умеющий раздавать адреса
   по dhcp. Подключаем, перезагружаем ВВВ кнопкой "reset" или командой консоли reboot,
   находим присвоенный ВВВ адрес - в логах роутера или в консоли по команде "ifconfig
   eth0", далее - возможен доступ по ssh или через браузер. На настоящий момент адрес
   10.0.10.114.

   На порту 3000 (http://10.0.10.114:3000) развернута IDE Cloud9 с массой интересных
   возможностей, есть с чем поиграться.

*** DONE Компиляция и запуск HelloWorld на BBB

   Простые сишные файлы компилируются по "gcc example.c -o example" и запускаются
   "./example"

*** DONE Установка и базовый запуск nginx

   По умолчанию на ВВВ крутится apache2.  Готовых .deb пакетов nginx для архитектуры
   ARM нет, надо собирать из исходников.  Исходники лежат здесь:
   http://hg.nginx.org/nginx/shortlog/stable-1.8 (последние на сегодня), потом можно
   поискать следующую стабильную версию. Скачиваем
   http://hg.nginx.org/nginx/archive/stable-1.8.tar.gz, загружаем на ВВВ через scp scp
   stable-1.8.tar.gz root@10.0.10.114:/root/build ^^^!!! это запускается на нашей
   машине в консоли, в папке где лежит архив!!!  (если папки /root/build нет, её можно
   создать "mkdir /root/build" из консоли ВВВ)

   Дальше распаковываем архив:
   tar -xzf stable-1.8.tar.gz

   Переходим в папку nginx:
   cd nginx-stable-1.8

   Файл конфигурации лежит не там, где нужно. Перетаскиваем, запускаем:
   cp auto/configure .
   ./configure

   Сконфигурировалось, собираем командой "make", устанавливаем "make install"
   Nginx не прописывает себя в системные пути, вручную его можно запустить
   /usr/local/nginx/sbin/nginx

   ...но пока крутится apache2, мы с конфигурацией по умолчанию этого не сделаем.
   vi /usr/local/nginx/conf/nginx.conf
   в строке 37 выставляем "listen 8081"

   Снова запускаем nginx, открываем приветствие nginx по адресу http://10.0.10.114:8081/
   Вуаля.



*** START Установка WebServer-a на BBB
*** START Запуск HelloWorld-WebPage на BBB

* WAIT Серверная часть
** TODO Общие положения

   Серверную часть необходимо полностью переписать в соответствии со
   следующими критериями:

   - Необходимо отойти от связки php+appche, сервер должен иметь
     автономное ядро (бэкэнд, сервер приложений) которое возможно будет
     развернуть на платформах ОС семейств Windows или Linux. Выбор
     оптимальных средств (языка программирования) с помощью которых
     будет реализована данная задача на данный момент является
     приоритетной задачей.

   - В качестве сервера БД предлагается использовать бесплатные системы
     MySQL с базами InnoDB или PostgreSQL (выбор необходимо
     аргументировать).

   - Все требуемые администратору системы и конечному пользователю
     интерфейсы и средства должны быть реализованы в кроссплатформенном
     браузерном варианте. Т.е. система должна быть реализована по
     принципу "одного окна" (или точнее "всё на одной вкладке
     браузера"). В дальнейшем возможно создание клиентских приложений на
     замену браузерной реализации, но данная задача не является
     приоритетной.

   - Сервер должен иметь модульную структуру как по функционалу, так и
     по доступным конечным пользователям интерфейсам управления и
     администрирования (фронтэнду). Модули должны подключаться к серверу
     в процессе изначальной установки, либо легко подключаться
     после. Необходимо предусмотреть возможность инсталляции модулей как
     с носителя, так и из сетевого репозитория.

   - Ядро сервера и модули должны иметь встроенные средства
     защиты. Предполагается использование аппаратного ключа HASP или
     RuToken (возможно аналогов) для ядра и отдельных программных ключей
     лицензирования для подключения отдельных модулей.

   - При создании сервера необходимо разработать APIи техническую
     документацию для возможности дальнейшей интеграции нашего ПО с
     системами СКУД, 1С и т.д.

   - Необходима возможность объединения серверов в кластеры,
     т.е. несколько локальных серверов на отдельных парковках должны
     иметь возможность обмениваться информацией с центральным сервером в
     центре управления. Центральный сервер же должен иметь приоритет над
     локальными, имея возможность управлять СКД во всём кластере,
     тарифами и т.д.

** TODO Основной функционал сервера:

   В базовом варианте сервер должен иметь собственно ядро, БД и два
   основных модуля (интерфейса) - администратора системы и парковщика.

   Администратор системы должен иметь следующие возможности:

   - Получать информацию обо всех стойках и терминалах, находящихся в
     локальной сети по факту настройки стоек на работу с данным сервером.

   - Изменение IP-адресов, ключей шифрования, номеров стоек, управления
     секторами, временем, информацией, выводимой на дисплей стоек и
     печатаемой на чеках, подключения и удалённого программного
     отключения периферийного оборудования на них (торговое
     оборудование, светофоры, табло), гибкой настройки логики работы
     сенсоров (фотоэлементов, магнитных петель).

   - Получение информации агрегируемую сервером со стоек - события
     въездов, выездов, оплаты, ошибки и т.п., которая должна писать в лог
     и быть доступна для выгрузке по дате в отчёт в формате *.xls.

   - Доступ к средствам тестирования работоспособности стоек (аналог
     текущего ParkingTest).

   - Управление пользователями системы, создание логинов и паролей,
     распределение прав доступа к интерфейсам из-под учётных записей и
     групп пользователей системы (в том числе и для самого себя).

   Оператор парковки должен иметь следующие возможности:

   - Открытие и закрытие шлагбаумов, подключённых к стойкам, находящимся
     в локальной сети.

   - Управление количеством свободных мест на парковке.

   - Мониторинг информации, приходящей со стоек (лога) в режиме
     реального времени.

**
** WAIT База данных
** WAIT Web-интерфейс сервера
** WAIT Агреггирующий сервер
* TODO Дополнительные аппаратно-програмные модули

   Мы хотим продавать решение разным людям за разные деньги. Обосновать это им можно
   только предоставляя разные версии функционала.

   Дополнительные модули должны подключаться к системе по запросу клиента в тех или
   иных сочетаниях. При этом, каждый из этих установленных модулей подключается
   администратором системы конкретному пользователю (группе пользователей). Это
   позволяет сегментировать стоимость решения по цене.

*** Модуль =платной парковки=

    Добавляет возможность работы с оплатой парковочного времени и управляет тарифами на
    парковке. В системы добавляется интерфейс администратор тарифов, с помощью которого
    можно изменять почасовую стоимость пребывания на парковке, бесплатное время
    пребывания на парковке, время бесплатного выезда с парковки после оплаты услуг и
    т.д.

*** Модуль =СКУД=

    Добавляет возможность работы с бесконтактными картами доступа в безусловном режиме
    разрешения / запрета въезда. В систему добавляется интерфейс администратора СКУД,
    который позволяет заводить в систему карты доступа по их индивидуальному номеру,
    вводить информацию о владельцах карт (ФИО, гос. номер транспортного средства и
    т.п.), распределять карты по различным группам доступа. Группы доступа могут иметь
    различные права по времени возможного въезда/выезда с парковки, по посещению тех
    или иных секторов парковки, а также иметь численное ограничение количества въездов
    (т.е. карт выдано в группе 10, но данной группе на парковке принадлежит только 5
    мест и одновременно на парковке / в секторе парковки может находиться только 5
    машин). Карты доступа могут временно блокироваться, переноситься в архивные и
    окончательно удаляться администратором. Если установлены другие модули, работающие
    с б/к картами, администратор может изменять тип карт с одного на другой (абонемент,
    дебетовая). У оператора парковки при подключённом модуле СКУД в логе добавляются
    сообщения о въездах и выездах по картам. Также добавляется интерфейс аудитора СКУД,
    который позволяет пользователю с данными правами получить доступ к информации о
    картах доступа, но не даёт возможности её изменять.

*** Модуль для =работы с абонементами=

    Добавляет возможность работы с бесконтактными картами в режиме оплаты услуг
    парковки владельцем карты на заданный срок - т.е. оплата на фиксированную сумму
    производится один раз в установленный срок. В систему добавляется интерфейс
    администратора абонементных карт,позволяющий заводить в систему абонементные карты
    по их индивидуальному номеру, вводить информацию о владельцах карт (ФИО, гос. номер
    транспортного средства, номер договора на предоставление услуг и т.п.),
    распределять карты по различным группам доступа и тарифными группам. Группы доступа
    используются те же, что и в модуле СКУД. Абонементные карты могут временно
    блокироваться, переноситься в архивные и окончательно удаляться
    администратором. Если установлены другие модули, работающие с б/к картами,
    администратор может изменять тип карт с одного на другой (СКУД, дебетовая).В
    интерфейс администратора тарифов добавляется возможность работы с тарифными
    группами, сроками и стоимостью оплаты для абонементов.У оператора парковки, при
    подключённом модуле работы с абонементами, в логе добавляются сообщения о въездах и
    выездах по картам и сроке действия карт. Также добавляется интерфейс аудитора
    абонементных карт, который позволяет пользователю с данными правами получить доступ
    к информации об абонементных картах и сроках оплаты клиентом услуг, но не даёт
    возможности её изменять.

*** Модуль для =работы по дебетовым картам=

    Добавляет возможность работы с бесконтактными картами в режиме оплаты услуг
    парковки владельцем карты по специальному тарифу - т.е. он кладёт деньги на карту
    через кассу, сумма фиксируется в платёжной системе парковки и далееденьги
    списываются с него исходя из времени пребывания на парковке при выездах, но по
    особым тарифам. В систему добавляется интерфейс администратора дебетовых
    карт,позволяющий заводить в систему дебетовые карты по их индивидуальному номеру,
    вводить информацию о владельцах карт (ФИО, гос. номер транспортного средства, номер
    договора на предоставление услуг и т.п.), распределять карты по различным группам
    доступа и тарифными группам. Группы доступа используются те же, что и в модуле
    СКУД. Дебетовые карты могут временно блокироваться, переноситься в архивные и
    окончательно удаляться администратором. Если установлены другие модули, работающие
    с б/к картами, администратор может изменять тип карт с одного на другой (СКУД,
    абонементная).В интерфейс администратора тарифов добавляется возможность работы с
    тарифными группами и стоимостью времени пребывания на парковке для дебетовых карт.У
    оператора парковки, при подключённом модуле работы с дебетовыми картами, в логе
    добавляются сообщения о въездах и выездах по картам и списанных со счёта
    средствах. Также добавляется интерфейс аудитора дебетовых карт, который позволяет
    пользователю с данными правами получить доступ к информации о дебетовых картах,
    состоянии счёта клиента и тарифном плане, но не даёт возможности ничего изменять.

*** Модуль =акцептирования=

    Добавляет в систему возможность обнуления требующего оплаты билета со штриховым
    кодом через интерфейсную оболочку. В систему добавляется интерфейс акцептирования
    билета в котором пользователь может ввести в специальное поле номер билета (или
    считать номер сканером штрих-кода) и произвести либо безусловное акцептирование -
    сделать билет бесплатным для выезда навсегда изменив информацию о нём на сервере и
    выездных стойках, либо акцептирование на выезде- у клиента будет возможность
    покинуть парковку в течении бесплатного времени после акцептирования, либо
    акцептирование по тарифу - данному билету присваивается специальный тариф
    (используется список тарифов дебетового режима) и стоимость пребывания на парковке
    пересчитывается исходя из него. При акцептировании пользователь вводит комментарий,
    в котором пишется причина акцептирования. Вся информация о проведённых
    акцептированиях билетов (пользователь, номер билета, время акцептирования, сумма
    акцептирования) пишется в лог и доступна для ознакомления в интерфейсе аудитора
    акцептирования.

*** Модуль =арендаторов=

    Добавляет в систему возможность обнуления требующего оплаты билета со штриховым
    кодом на кассах, стойках информации или через интерфейсную оболочку с помощью карты
    арендатора с последующим списанием обнулённой суммы на счёт владельца карты. В
    систему добавляется интерфейс администрирования арендаторов, в котором можно
    создавать пользователей - "арендаторов" и привязывать их бесконтактным картам и
    основным пользователям системы. Каждому арендатору выдаётся своя бесконтактная
    карта, для которой в системе администратором установлен режим акцептирования
    (режимы перечислены в описании модуля акцептирования, для дебетового режима
    устанавливается тариф). С помощью этой карты арендатор может акцептировать билет
    клиента, приложив сначала билет, а затем карту к стойке информации, кассе или введя
    номер билета на ПК, а затем приложив карту к считывателю на ПК. После этого клиент
    покидает парковку в соответствии с правилами акцептирования, а акцептированная
    сумма переводится на "овердрафтовый счёт" данного арендатора в системе. Все данные
    по этому счёту отображаются в интерфейсе счета арендаторов. Через этот интерфейс
    можно либо списать сумму, которую должен арендатор, либо распечатать фискальный чек
    через ККМ, подключённый к ПК, либо выгрузить форму счёта на оплату в банке.

*** Модуль =кассира=

    Добавляет в систему возможность оплаты услуг парковки через ручную кассу на базе ПК
    к которому подключён ККМ и, опционально, денежный ящик и сканер штриховых кодов. В
    систему добавляются интерфейсы кассир и кассир - парковщик. В интерфейсе кассира
    пользователь может провести процедуру оплаты билета - вбить его номер (или считать
    номер сканером штрих-кода), выбрать тариф оплаты, принять сумму к оплает и
    распечатать выездной фискальный чек с суммой, рассчитанной системой исходя из
    времени и тарифа. При этом приём денег и выдача сдачи осуществляется
    непосредственно человеком. Кассир-парковщик имеет интерфейс оплаты совмещённый с
    интерфейсом обычного оператора парковки в котором есть возможность открытия и
    закрытия шлагбаума, доступ к логу и т.п.

*** Модуль =бухгалтера=

    Добавляет в систему возможность получения финансовых отчётов по парковке и кассовым
    аппаратам (нарастающий итог, оборот по кассам и т.п.), а также делает возможным
    автоматическое снятие Z-отчётов, печать копий Z-отчётов, изъятие установленной
    суммы из автоматической кассы и т.д.

*** Модуль =фотофиксации=

    Добавляет в систему фотографирования камерами по событию. В интерфейсе
    администратора системы добавляется функция привязки камеры к конкретной стойке и
    список событий, производимых со стойкой, по которым камера должна производить
    фотографирование. Во все логи, в том числе и у оператора парковки, к сообщениям о
    данных событиях прикрепляются фотографии. Также добавляются интерфейсы машины на
    парковке и аудиторфотофиксации в которых можно посмотреть фотографии всех машин,
    которые приехали на парковку и находятся на ней и, соответственно, приехали и
    уехали с парковки в установленный промежуток времени.

*** Модуль =распознания номеров=

    Интеграция с SIP сервером VoIP связи Asterisk

*** Модуль =дуплексной IP связи=

* WAIT Интеграция со сторонними решениями
** WAIT Выгрузка данных в 1С
** WAIT Интеграция с 1С
** WAIT Интеграция со сторонним биллингом
   Интеграция с системами биллинга платёжных терминалов.
** WAIT Интеграция с NOW!
** WAIT Интеграция с SOLVO
** WAIT API для создания библиотек
   Ориентирование системы на написание библиотек переферии сторонними разработчиками
* WAIT Тестирование
** TODO Описать полный цикл работы системы с обработкой ошибок
**** На алгоритмы проезда
**** На алгоритмы оплаты
**** Совмещенные алгоритмы
* TODO Глоссарий
** Сигнал
   =Сигнал= - это то, что поступает на контроллер с перифирийного датчика или что мы
   шлем, чтобы включить лампочку, т.е. это замыкание реле и принимаемая на GPIO простая
   логика (0 или 1) .
** Сообщение
   =Сообщение= - это то, что контроллеры и некоторые периферийные устройства шлют друг
   другу, серверу и пользователю. Сообщения могут быть =синхронными= и =асинхронными=
** Событие
   =Событие= - это то, что внезапно произошло и на что надо отреагировать (обработать
   событие). Сигнал или сообщение может спровоцировать возникновение события. События обрабатываются
   синхронно.
** Состояние
   =Состояние= определяет реакции на события - к примеру, когда пользователь
   нажимает на кнопку стойки - реакция разная, в зависимости от того в каком состоянии
   находится стойка. Переходы из одного состояния в другое производятся при обработке
   событий
** Процедура
   =Процедура= - это последовательность взаимодействий элементов системы включая
   пользователей и операторов для достижения результата.
** Датчик
   =Датчик= это внешнее переферийное устройство или его часть, предназначенное для
   сбора данных и выработки на их основе =сигналов=, реже - =сообщений=, передаваемых на контроллер.
*** Датчик присутствия автомобиля

    #+CAPTION: Датчик присутствия автомобиля
    | выход | сухой контакт  |

    Устройство, отслеживающее наличие объекта, соответствующего по установленным
    характеристикам автомобиля (петля индуктивности, датчик магнитного поля,
    фотоэлемент безопасности)

*** Датчик (фотоэлемент) безопасности

    Устройство, отслеивающее наличие любого объекта в зоне или на линии контроля
    (фотоэлемент безопасности)

*** Контроля состояния стрелы шлакбаума

    Часть конструкции автоматичекого шлагбаума, отслеживающая состояние
    открытия/закрытия стрелы шлагбаума (концевики или релейная развязка)

** Стойка

   =Стойка= - это корпус устройства в который собирается вся периферия и контроллер.

   Стойки бывают:
   - =въезда= - стойки устанавлеваемые на въезде, характеризуются возможностью выдавать
     билеты(или mifare карты), управлять шлагбаумом.
   - =выезда= - стойки устанавлеваемые на выезде, характеризуются возможностью
     сканировать билеты(или принимать mifare карты), управлять шлагбаумом.
   - =проезда= - стойки устанавлеваемые на территори характеризуются возможностью сканировать
     билеты (или mifare/em-marine карты), управлять шлагбаумом, регулировать работу зон
     парковки.
   - =оплаты= - стойка с функционалом =кассы=, устанавливаемая на территори парковки, характеризуемая
     возможностью сканировать билеты (или mifare/em-marine карты), принимать оплату и
     печатать фискальный чек.
   - =оплаты совмещенная с въездом= - это стойка с функционалом =кассы=, устанавливаемая
     на въезд на парковку, характеризуемая возможностью выдачи билетов (mifare карт),
     приёма оплаты, печатати фискального чека и управления шлагбаумом.
   - =оплата совмещенная с выездом= - это стойка с функционалом =кассы=, устанавливаемая
     на выезде с парковки, характеризуемая возможность сканирования билетов (приёма mifare карт),
     приёма оплаты, печатати фискального чека и управления шлагбаумом.
   - =СКУД= - стойки устанавлеваемые на территори/въезде/выезде парковки,
     характеризуются возможностью сканировать mifare/em-marine карты), управлять
     шлагбаумом.
   - =информации= - стойки устанавливаемые на территори парковки, характеризуются
     возможностью сканировать билеты (или mifare карты), выводить на дисплей данные по
     ним и различные проводить операции со временем или внутренним счетом билета
     (карты)

** Периферийные устройства

   =Периферийные устройства= - это устройства подключаемые к контроллеру парковки,
   получающие от него и отсылающие ему =сигналы= или =сообщения=.

   Периферийные устройства бывают:

   =внутренние= - устройства подключаемые к контроллеру парковки, характеризуемые
   расположением внутри стойки

   =внешние= - устройства подключаемые к контроллеру парковки, характеризуемые
   расположением вне стойки стойки

   =торговые= - любое устройство, подключаемое к контроллеру парковки или ПК,
   работающее с деньгами (монеты/купюры/банковские карты)

   =опросное= - устройство, статус которого постоянно проверяется системой и при выходе
   из строя которого так или иначе изменяется функционал и принцип работы системы

   =критичное для работы= - частный случай опросного устрйоства, при выходе из строя
   которого стойка автоматически уходит в состояние "Заблокирована"

** Касса

   =Касса= (или =платежный терминал=) - это комплекс устройств (возможно - стойка)
   обеспечивающих оплату пребывания посетителя  на парковки и дополнительных
   услуг.

   - =автоматическая касса= - это =стойка= устанавливаемая на территории парковки, обепечиает
   полностью автоматизированный цикл оплаты пользователем услуг парковки.

   - =автоматическая каасса совмещенная с въездом= - это то же, что  =стойка оплаты совмещённая с въездом=.

   - =автоматическая касса совмещенная с выездом=  - это то же, что  =стойка оплаты совмещённая с выездом=.

   - =ручная касса= - это имеющее собственный корпус устроство под управлением =контроллера=
     с встроенным в него сканером штрих-кодов (считыватель карт em-marine/mifare), денежным ящиком и фискальным регистратором. Все операции получения денег и выдачи
     сдачи производит оператор (кассир) без автоматизирующего процесс торгового оборудования.

   - =касса на базе ПК= - это настольный персональный компьютер с подключенными к нему
     настольными сканером штрих-кодов (считыватель карт em-marine/mifare), денежный ящик и фискальный регистратор. Все операции получения денег и выдачи
     сдачи производит оператор (кассир) без автоматизирующего процесс торгового оборудования.

** =Проездной документ=

   Это носитель информации, выдаваемый посетителю парковки, на котором находится (в
   т.ч. шифруется) информация о времени и терминале въезда на парковку, а также данные,
   необходимые для автономного функционированния парковки и реализации различных
   механизмов монетизации.

   Проездные билеты можно разделить разовости прмменения, по материалам из которых они
   сделаны, по

   Типы:

   =одноразовый= - единоразово создаваемый и выдаваемый клиенту носитель информации,
    который несёт на себе информацию о времени въезда и терминале въезда

   =многоразовый= - многоразово используемый проездной документ, с помощью которого
   посетитель паркови может посещать её не пользуясь одноразовыми въездными билетами=

   Материалы:

   =бумажный= - напечатанный на термобумаге или картоне, информация зашифрована в
   штриховом коде

   =пластиковый= - карта стандарта EM-Marine или Mifare, информация зашифрована на
   чипе карты

*** Категории:

    =въездной= - разновидность билета получаемого при въезде на парковку

    =выездной= - разновидность билета получаемого (или перведенимого в данный статус из
    въездного) при оплате парковки, как правило совмещён с фискальным чеком

*** Статусы:

    =с бесплатным временем= - билет на котором еще не закончеллось бесплатное время
    стоянки

    =неоплаченный= - билет на котором закончелось бесплатное время и началось платное
    время стоянки

    =оплаченный= - билет по которому была произведена оплата

    =использованный= - билет который уже использовали для выезда с парковки

    =фискальный чек= - документ выдаваеммый кассой при проведении операции оплаты, может
    быть сомещен с оплаченным билетом при использовании бумажных носителей

** =Контроллер %type%

   Это устройство контролирующее работу ряда переферийных элементов =автоматизированной
   парковки (АП)= - контроллер регламентирующий работу стоек системы парковки и всех
   подключенных переферийных устройств, устанавивется в стойках.  =системы навигациии
   (СН)= - контроллер регламентирующий работу устройств, входящих в систему навигации и
   учёта сводных мест с помощью УДПА

** TODO =Сервер %type%=

   =парковочной системы=
   =агрегирующий=
   =сторонний=
   =навигационной системы=

   Время %type%= - промежуток времени установленный в ситеме (следовательно и внесенный
   на носитель информации - билет)
   =бесплатное   = - промежуток в течении которого посетитель парковки может
   беспрепятственно выехать по текущему носителю информации
   =платное = - промежуток в течении которого начисляется оплата согласно тарифам
   парковки
   =оплаченное   = - промежуток платного времени который оплатил посетитель
   =на выезд= - промежуток бесплатного времени начисленный на носитель информации после
   оплаты платного времени, начинаестся сразу после превода платного в оплаченное время.
   =акцептированное= - промежуток дополнительного бесплатного времени начисленный на
   носитель информации, учитывается при расчете платного времени.
   =сверх оплаченного   = - промежуток платного времени начинающийся после окончания
   времни на выезд.

   %type% группы  = - группа стоек и перефериного оборудования устанавлваемого в точке
   проезда автомобиля или прохода посетителя.
   =въездная= - характеризуется установкой на въездах на территорию парковки
   =выездная= - характеризуется установкой на выездах с территории парковки
   =проездная= - характеризуется установкой на переездах  на территорию парковки
   =реверсивная= - характеризуется установкой на реверсивных проездах (въезд и выезд по
   одной полосе) может быть одновременно и проездной

** =АСПП= - Автоматическая Система Платной Парковки

   Территория парковки(парковка)= - комплекс инфраструктурных и дорожных объектов
   являющаяся отдельной территорией и оснащаемым АСПП.

   Деление территории на %type%= - территория парковки делится на сегменты согласно ряду
   признаков
   =сектор= - физический сегмент парковки, применим в системе подсчета свободных мест
   и/или ограничении типа проезжаемых автомабилий в данный сегмент.
   =тарифные зоны= - логический сегмент парковки, применим при описании различных
   тарифов в зависимости от фактического места и времени стоянки и/или проезда автомобиля.

** =Посетитель %type%= - водитель автомобиля посетившего парковку.

   =разовый= - водитель однократно вопользовавшийся услугой парковки и использующий
   [TODO] одноразовые идентификатор.

   =постоянный %???%= - водитель многократно и неограниченно пользующийся услугой
   парковки и использущий многоразовый идентификатор запрограммированный на определённый
   тип предотсвляемых услуг

   =с картой доступа=

   =с абонементом= -водитель многократно и не огранниченно пользующийся услугой парковк
   и использущий многоразовый носитель информации, и ежемесячно оплячивающий эти услуги
   через АСПП внося на внутренний счет носителя.

   =с картой предоплаты= -водитель многократно пользующийся услугой парковк и
   использущий многоразовый носитель информации, оплачивающий фактической время
   пребывания со внутреннего счета носителя информации, и пополняющий его через АСПП

** TODO Деление парковкочных мест %

   =линия=
   =объём=

** Тариф

   =типы проездов через шл=
   =переферия стоек внешняя=
   =внутренний счет=
   =мифаре=
   =емарине=

** Роли
*** пользователь

   Внешний носитель

   УДПА

** TODO Процесс

** TODO Рампа
   Когда шлагбаум располагается после стойки и после-после стойки
** TODO Шлюз
   Когда шлагбаум располагается до стойки и после стойки
** TODO Реверсивный проезда
* Данные по первому поколению системы
** DONE Старая версия сервера
   Доступ к текущей реализации сервера и БД для ознакомления:
   http://31.28.10.26:8889
   admin | 8812
   http://31.28.10.26:8889/phpmyadmin/
   root | gThy77gG
