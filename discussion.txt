Михаил:
Я настроил локальный репозиторий с документами по проекту и
теперь жду когда его можно будет залить Ранме.  ы работал с GIT?

Юрий:
Нет, но знаю что это такое и буду разбираться.

Михаил:
Окей. Давай я тебя быстро введу в эту тему?

Юрий:
Давай. В каком формате?

Михаил:
В формате "прямо на месте"
GIT - система контроля версий, разработанная создателем линукса, когда
он обнаружил что все отстальное - отстой. Теперь - отраслевой стандарт
де-факто для всех, кто совместно работает над документами
(спецификациями - это наш случай, кодом - это для программистов, и
данными - это тестеры и аналитики)

Позволяет ослеживать изменения в документах вот таким образом:
https://github.com/rigidus/moto/commit/02dea0fc59e3c75ba3902708463d11f49723b230

Юрий:
Это мне все известно )

Михаил:
По этой ссылке одно из изменений в плане доклада над которым я работаю
совместно с Машей. В целом - это более совершенный и удобный вариант
чем гуглодоксы, тем более что позволяет работу в оффлайне и имеет ряд
других важных преимуществ
Кроме того, если мы переведем ТЗ на гит, то дальше сможем
воспользоваться подходом, который называется "исполняемые
спецификации", который нам существенно упростит жизнь. Про подход
можно посмотреть тут: http://www.electronics.ru/journal/article/1041
Короче, смысл в том, что мы пишем куски кода системы или его шаблона
прямо под пунктом спецификации. Например, есть кусок:

Администратор системы должен иметь следующие возможности:
- Получать информацию обо всех стойках и терминалах, находящихся в
локальной сети по факту настройки стоек на работу с данным сервером.

И прямо внутри этого пункта я пишу кусок допустим эрланг или пхп-кода,
который потом станет частью системы, которая и будет выполнять эту
часть спецификации.

Если спецификация меняется - с ней меняется и код, в результате мы
избегаем факапа, когда в спеке одно, а в коде другое.

Я так работаю уже несколько лет, подход успешный
В статье приведет вендороориентированный вариант, но это понятно - им
надо продать свои инструменты

Юрий:
Ага, я все понял

Михаил:
Еще (то что понравится Ранме, поскольку он фанат тестов) - по спеке
можно генерить тесты - это убивает сразу 90% ручного труда по
тестированию и снижает кол-во ошибок

Юрий:
Мой инстументарий из 2009 года родом, последний проект разработки ПО в
котором я участвовал в геймдеве. Мантисс, BPWin, медиавики. )
Михаил:
БпВин и медиавики не так уж плохи ) Спеку мы в любом случае делаем в
википодобном формате

Юрий:
Не плохи. Но это вчерашний день. )
Михаил:
В общем, пока начем в гуглдоксах, чтобы народ привык, но лучше конечно
сразу поставить себе гит-клиент, ранма поставит гит-сервер и там уже
продолжать работу.

Юрий:
Сразу как будет гит - все туда.

Михаил:
Тебе рекомендую, чтобы не тратить время - пройти какой-нибудь быстрый
курс по гиту, размером в минут 20 - чтобы уже быть в теме. Важно знать
что такое коммит, ветка и как пушить изменения

Юрий:
Я просто возьму, поставлю себе демо сервер и почитаю хабр, где точно
есть фак )

Михаил:
Есть такая простая штука http://githowto.com/ru
На хабре это не 20 минут а минимум пара часов
Хотя тоже неплохо
Дальше такой момент. С "исполняемыми спеками" есть такая проблема, что
они работают с plain-text. Это очень хорошо, но разводка плат у нас в
другом немного формате )) Тут есть вариант "правильный" и "как
сложилось"
Правильный вариант - генерить плату из спеки, потом добавлять к ней
"изменения". Но это не каждый инженер фанат такого подхода

Юрий:
Так. Давай ка общий чат с этого момента.

Михаил:
"Как сложилось" - это рисовать плату и давать на нее ссылку в спеке
Но тут соответствие спеке нужно отслеживать только головой )
Давай лучше обсуждение сохраним в гите
Есть еще всякие вендороориентированные решения, где поддерживаются
исполняемые спеки, но у них как правило проприетарные закрытые форматы
и они хотят денег - так что это не наш путь
Как называется наш проект? Codename?

Юрий:
Automaton APS2.0 пусть называется. Вообще не важно.

Михаил:
окей

Юрий:
Я думаю, что по плате мы со схемотехником уже будем решать

Михаил:
Да. Но по тз лучше сейчас создать репу, а потом перенести ее к
ранме. Я создам на гитхабе если никто не предложит альтернативы
Рекомендую там зарегаться github.com
